[I 161214 09:50:08 web:1946] 304 GET /host (172.17.92.116) 19.96ms
[I 161214 09:50:09 web:1946] 304 GET /host/get/1 (172.17.92.116) 13.61ms
[I 161214 09:50:17 web:1946] 304 GET /host/get/2 (172.17.92.116) 7.88ms
[I 161214 09:50:19 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 3.15ms
[I 161214 09:50:49 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 28896.47ms
[I 161214 09:51:10 web:1946] 200 GET /actionmanager/history/45 (172.17.92.116) 5.19ms
[I 161214 09:54:48 web:1946] 304 GET /argument (172.17.92.116) 15.39ms
[I 161214 09:54:48 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.13ms
[I 161214 09:54:50 web:1946] 304 GET /argument/page/2 (172.17.92.116) 4.49ms
[I 161214 09:57:29 web:1946] 200 PUT /argument/id/32 (172.17.92.116) 31.78ms
[I 161214 09:57:29 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.66ms
[I 161214 09:57:32 web:1946] 304 GET /host (172.17.92.116) 20.86ms
[I 161214 09:57:33 web:1946] 304 GET /host/get/1 (172.17.92.116) 7.13ms
[I 161214 09:57:35 web:1946] 304 GET /host/get/2 (172.17.92.116) 4.94ms
[I 161214 09:57:36 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 3.36ms
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
ok: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
ok: [172.17.92.28]

TASK: [create log directory] ************************************************** 
ok: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
ok: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
changed: [172.17.92.28]

TASK: [create config directory] *********************************************** 
ok: [172.17.92.28]

TASK: [copy logs.sh script] *************************************************** 
ok: [172.17.92.28]

TASK: [template file] ********************************************************* 
fatal:DEBUG [172.17.92.28] => {'msg': "AnsibleUndefinedVariable: One or more undefined variables: 'LB01Port' is undefined", 'failed': True}
fatal:DEBUG [172.17.92.28] => {'msg': 'One or more items failed.', 'failed': True, 'changed': False, 'results': [{'msg': "AnsibleUndefinedVariable: One or more undefined variables: 'LB01Port' is undefined", 'failed': True}]}

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
ok: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
ok: [172.17.92.28]

TASK: [create log directory] ************************************************** 
ok: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
ok: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
ok: [172.17.92.28]

TASK: [create config directory] *********************************************** 
ok: [172.17.92.28]

TASK: [copy logs.sh script] *************************************************** 
ok: [172.17.92.28]

TASK: [template file] ********************************************************* 
changed: [172.17.92.28] => (item=LBServer.ini)
fatal:DEBUG [172.17.92.28] => {'msg': "AnsibleUndefinedVariable: One or more undefined variables: 'AlarmAddr' is undefined", 'failed': True}
fatal:DEBUG [172.17.92.28] => {'msg': 'One or more items failed.', 'failed': True, 'changed': True, 'results': [{'src': '/root/.ansible/tmp/ansible-tmp-1481680682.17-259301310825670/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/data/M4-Product/config/LBServer.ini', 'checksum': '0ba890dffe88b289f1fc45df810de0a558208865', 'md5sum': 'e7fd8d1b2c0d988a2e12bbfccb49c98a', 'owner': 'root', 'item': 'LBServer.ini', 'state': 'file', 'gid': 0, 'mode': '0644', 'invocation': {'module_name': 'template'[I 161214 09:58:02 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 24673.46ms
[I 161214 09:59:20 web:1946] 200 GET /actionmanager/history/45 (172.17.92.116) 4.14ms
[I 161214 10:00:26 web:1946] 304 GET /argument (172.17.92.116) 15.56ms
[I 161214 10:00:27 web:1946] 304 GET /argument/page/1 (172.17.92.116) 5.47ms
[I 161214 10:00:28 web:1946] 304 GET /argument/page/2 (172.17.92.116) 4.08ms
[I 161214 10:01:32 web:1946] 200 PUT /argument/id/32 (172.17.92.116) 69.51ms
[I 161214 10:01:32 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.56ms
[I 161214 10:01:47 web:1946] 304 GET /host (172.17.92.116) 19.43ms
[I 161214 10:01:47 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.53ms
[I 161214 10:01:48 web:1946] 304 GET /host/get/2 (172.17.92.116) 4.69ms
[I 161214 10:01:50 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 2.92ms
[I 161214 10:02:18 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 27553.10ms
[I 161214 10:02:24 web:1946] 200 GET /actionmanager/history/45 (172.17.92.116) 4.26ms
[I 161214 10:05:59 web:1946] 304 GET /host (172.17.92.116) 17.81ms
[I 161214 10:05:59 web:1946] 304 GET /host/get/1 (172.17.92.116) 8.39ms
[I 161214 10:06:01 web:1946] 304 GET /argument (172.17.92.116) 16.34ms
[I 161214 10:06:02 web:1946] 304 GET /argument/page/1 (172.17.92.116) 5.03ms
[I 161214 10:06:03 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.63ms
[I 161214 10:29:22 web:1946] 304 GET /addplaybook (172.17.92.116) 34.61ms
, 'module_complex_args': {}, 'module_args': 'src=/data/ansible-playbook/config/LBServer.ini dest=/data/M4-Product/config/LBServer.ini'}, 'size': 65}, {'msg': "AnsibleUndefinedVariable: One or more undefined variables: 'AlarmAddr' is undefined", 'failed': True}]}

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
ok: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
ok: [172.17.92.28]

TASK: [create log directory] ************************************************** 
ok: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
ok: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
ok: [172.17.92.28]

TASK: [create config directory] *********************************************** 
ok: [172.17.92.28]

TASK: [copy logs.sh script] *************************************************** 
ok: [172.17.92.28]

TASK: [template file] ********************************************************* 
ok: [172.17.92.28] => (item=LBServer.ini)
changed: [172.17.92.28] => (item=AlarmServer.ini)
changed: [172.17.92.28] => (item=dblc.conf)
changed: [172.17.92.28] => (item=initconfig)
changed: [172.17.92.28] => (item=LBClientConfig.ini)
ok: [172.17.92.28] => (item=LBServer.ini)
changed: [172.17.92.28] => (item=lcconfig.ini)
changed: [172.17.92.28] => (item=libdbapi.conf)
changed: [172.17.92.28] => (item=NATConfig.ini)
changed: [172.17.92.28] => (item=PFRingRelayServer.ini)

TASK: [template config/config file] ******************************************* 
changed: [172.17.92.28] => (item=aasclient.conf)
changed: [172.17.92.28] => (item=aasserver.conf)
changed: [172.17.92.28] => (item=rcserver.ini)
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n   [I 161214 10:29:22 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 3.83ms
[I 161214 10:30:32 web:1946] 200 GET /addplaybook (172.17.92.116) 18.28ms
 register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-12 17:26:11', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: template config/config file\n    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{ProjectPath}}/config/config/{{ ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-12 17:26:11', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/[I 161214 10:30:32 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.55ms
[I 161214 10:30:53 web:1946] 200 GET /addplaybook (172.17.92.116) 16.51ms
ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: template config/config file\n    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{ProjectPath}}/config/config/{{ ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-12 17:26:11', '---\n- hosts: "{{hosts}}"\n [I 161214 10:30:53 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.80ms
 tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: template config/config file\n    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{ProjectPath}}/config/config/{{ ']
DEBUG PUT22
UPDATE Playbook SET note="Test to init the m4 project",actionName="Test_M4_Init",actiontype="Service",playbook="---
- hosts: \"{{hosts}}\"
  tasks:
  - name: create project directory
    command: mkdir {{ProjectPath}} -p
    args:
      chdir: /tmp
      creates: \"{{ ProjectPath }}\"

  - name: apt-get install git
    apt: name=git state=latest
   
  - name: clone server-tmp
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp
    args:
      clone: yes
      force: yes
  - name: clone gitlib 
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs
    args:
      clone: yes
      force: yes
  - name: ln -s lib gitlib
    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes
 
  - name: clone gitbin
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin
    args:
      clone: yes
      force: yes
  - name: ln -s bin gitbin
    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes

  - name: create log directory 
    file: path={{ProjectPath}}/logs state=directory
  - name: create service root dir 
    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory

  - name: copy initconfig 
    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig

  - name: create config directory
    file: path={{ProjectPath}}/config/config state=directory

  - name: copy logs.sh script  
    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh

  - name: template file
    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}
    with_items:
      - LBServer.ini
      - AlarmServer.ini
      - cmserver.ini
      - fwagent.ini
      - lcclient.ini
      - lcveriapiconfig.ini
      - lcvericonfig.ini
      - dblc.conf
      - initconfig
      - LBClientConfig.ini
      - LBServer.ini
      - lcconfig.ini
      - libdbapi.conf
      - NATmain.py:942: Warning: Data truncated for column 'playbook' at row 1
  cur.execute(sql)
[I 161214 10:32:43 web:1946] 200 PUT /playbookmanager/id/22 (172.17.92.116) 46.30ms
Config.ini
      - PFRingRelayServer.ini

  - name: template config/config file
    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{ProjectPath}}/config/config/{{ item }}
    with_items:
      - aasclient.conf
      - aasserver.conf
      - rcserver.ini 

  - name: template command config file
    copy: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{item }}
    with_items:
      - 17monipdb.dat
      - serverlist.ini
      - vidalccert.pem
      - vidalcprikey.pem
      # Alarm lib
      - libemailalarm.so
      - libsmsalarm.so
      
...",author="wentong",updatetime="2016-12-14 10:32:43",filepath="/data/web/testplaybook/Test_M4_Init1481682763.yml"where id=22
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 10:32:43', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n    [I 161214 10:32:43 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 3.55ms
[I 161214 10:32:46 web:1946] 304 GET /host (172.17.92.116) 22.80ms
[I 161214 10:32:46 web:1946] 304 GET /host/get/1 (172.17.92.116) 7.38ms
[I 161214 10:32:48 web:1946] 304 GET /host/get/2 (172.17.92.116) 6.99ms
[I 161214 10:32:49 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 4.35ms
  creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: template config/c']
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
ok: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
ok: [172.17.92.28]

TASK: [create log directory] ************************************************** 
ok: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
ok: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
ok: [172.17.92.28]

TASK: [create config directory] *********************************************** 
ok: [172.17.92.28]

TASK: [copy logs.sh script] *************************************************** 
ok: [172.17.92.28]

TASK: [template file] ********************************************************* 
ok: [172.17.92.28] => (item=LBServer.ini)
ok: [172.17.92.28] => (item=AlarmServer.ini)
changed: [172.17.92.28] => (item=cmserver.ini)
changed: [172.17.92.28] => (item=fwagent.ini)
changed: [172.17.92.28] => (item=lcclient.ini)
changed: [172.17.92.28] => (item=lcveriapiconfig.ini)
changed: [172.17.92.28] => (item=lcvericonfig.ini)
ok: [172.17.92.28] => (item=dblc.conf)
ok: [172.17.92.28] => (item=initconfig)
ok: [172.17.92.28] => (item=LBClientConfig.ini)
ok: [172.17.92.28] => (item=LBServer.ini)
ok: [172.17.92.28] => (item=lcconfig.ini)
ok: [172.17.92.28] => (item=libdbapi.conf)
ok: [172.17.92.28] => (item=NATConfig.ini)
ok: [172.17.92.28] => (item=PFRingRelayServer.ini)

TASK: [temp[I 161214 10:33:24 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 33547.05ms
[I 161214 10:33:32 web:1946] 200 GET /actionmanager/history/45 (172.17.92.116) 5.91ms
[I 161214 10:59:42 web:1946] 304 GET /host (172.17.92.116) 20.80ms
[I 161214 10:59:42 web:1946] 304 GET /static/js/deltaops.js (172.17.92.116) 10.34ms
[I 161214 10:59:42 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.41ms
[I 161214 10:59:45 web:1946] 304 GET /addplaybook (172.17.92.116) 17.63ms
late config/config file] ******************************************* 
ok: [172.17.92.28] => (item=aasclient.conf)
ok: [172.17.92.28] => (item=aasserver.conf)
ok: [172.17.92.28] => (item=rcserver.ini)

TASK: [template command config file] ****************************************** 
changed: [172.17.92.28] => (item=17monipdb.dat)
changed: [172.17.92.28] => (item=serverlist.ini)
changed: [172.17.92.28] => (item=vidalccert.pem)
changed: [172.17.92.28] => (item=vidalcprikey.pem)
changed: [172.17.92.28] => (item=libemailalarm.so)
changed: [172.17.92.28] => (item=libsmsalarm.so)
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 10:32:43', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n   \n  - name: clone serv[I 161214 10:59:45 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.26ms
er-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: template config/c']
DEBUG PUT22
UPDATE Playbook SET note="Test to init the m4 project",actionName="Test_M4_Init",actiontype="Service",playbook="---
- hosts: \"{{hosts}}\"
  tasks:
  - name: create project directory
    command: mkdir {{ProjectPath}} -p
    args:
      chdir: /tmp
      creates: \"{{ ProjectPath }}\"

  - name: apt-get install git
    apt: name=git state=latest
  - name: apt-get install daemontools
    apt: name=daemontools state=latest
   
  - name: clone server-tmp
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp
    args:
      clone: yes
      force: yes
  - name: clone gitlib 
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs
    args:
      clone: yes
      force: yes
  - name: ln -s lib gitlib
    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes
 
  - name: clone gitbin
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin
    args:
      clone: yes
      force: yes
  - name: ln -s bin gitbin
    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes

  - name: create log directory 
    file: path={{ProjectPath}}/logs state=directory
  - name: create service root dir 
    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory

  - name: copy initconfig 
    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconf
ig

  - name: create config directory
    file: path={{ProjectPath}}/config/config state=directory

  - name: copy logs.sh script  
    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh

  - name: template file
    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}
    with_items:
      - LBServer.ini
      - AlarmServer.ini
      - cmserver.ini
      - fwagent.ini
      - lcclient.ini
      - lcveriapiconfig.ini
      - lcvericonfig.ini
      - dblc.conf
      - initconfig
      - LBClientConfig.ini
      - LBServer.ini
      - lcconfig.ini
      - libdbapi.conf
      - NATConfig.ini
      - PFRingRelayServer.ini

  - name: template config/config file
    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{Proje[I 161214 11:00:55 web:1946] 200 PUT /playbookmanager/id/22 (172.17.92.116) 72.09ms
ctPath}}/config/config/{{ 
item }}
    with_items:
      - aasclient.conf
      - aasserver.conf
      - rcserver.ini 

  - name: template command config file
    copy: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{item }}
    with_items:
      - 17monipdb.dat
      - serverlist.ini
      - vidalccert.pem
      - vidalcprikey.pem
      # Alarm lib
      - libemailalarm.so
      - libsmsalarm.so
      
  - name: get svscan 
    shell: ps aux |grep -v grep | grep svscan |grep {{ServiceRoot}} | wc -l
    register: result 

  - name: template f
    shell: nohup svscan {{ServiceRoot}} &
    when: result.stdout == \"0\" 
    args:
      chdir: \"{{ ProjectPath }}\"
...",author="wentong",updatetime="2016-12-14 11:00:55",filepath="/data/web/testplaybook/Test_M4_Init1481684455.yml"where id=22
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:00:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  -[I 161214 11:00:55 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 4.48ms
[I 161214 11:00:57 web:1946] 304 GET /addplaybook (172.17.92.116) 15.53ms
 name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconf\nig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n  ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one se[I 161214 11:00:57 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.36ms
[I 161214 11:00:59 web:1946] 304 GET /argument (172.17.92.116) 16.14ms
[I 161214 11:00:59 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.59ms
[I 161214 11:01:01 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.68ms
[I 161214 11:01:11 web:1946] 304 GET /host (172.17.92.116) 17.74ms
[I 161214 11:01:11 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.48ms
[I 161214 11:01:12 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.67ms
[I 161214 11:01:14 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 4.45ms
[I 161214 11:01:15 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 59.82ms
[I 161214 11:01:23 web:1946] 304 GET /addplaybook (172.17.92.116) 16.11ms
rver.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:00:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconf\nig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n  ']
run
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:00:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconf\nig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPa[I 161214 11:01:24 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.54ms
[I 161214 11:03:01 web:1946] 200 PUT /playbookmanager/id/22 (172.17.92.116) 85.52ms
th}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n  ']
DEBUG PUT22
UPDATE Playbook SET note="Test to init the m4 project",actionName="Test_M4_Init",actiontype="Service",playbook="---
- hosts: \"{{hosts}}\"
  tasks:
  - name: create project directory
    command: mkdir {{ProjectPath}} -p
    args:
      chdir: /tmp
      creates: \"{{ ProjectPath }}\"

  - name: apt-get install git
    apt: name=git state=latest
  - name: apt-get install daemontools
    apt: name=daemontools state=latest
   
  - name: clone server-tmp
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp
    args:
      clone: yes
      force: yes
  - name: clone gitlib 
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs
    args:
      clone: yes
      force: yes
  - name: ln -s lib gitlib
    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes
 
  - name: clone gitbin
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin
    args:
      clone: yes
      force: yes
  - name: ln -s bin gitbin
    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes

  - name: create log directory 
    file: path={{ProjectPath}}/logs state=directory
  - name: create service root dir 
    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory

  - name: copy initconfig 
    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig

  - name: create config directory
    file: path={{ProjectPath}}/config/config state=directory

  - name: copy logs.sh script  
    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh

  - name: template file
    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}
    with_items:
      - LBServer.ini
      - AlarmServer.ini
      - cmserver.ini
      - fwagent.ini
      - lcclient.ini
      - lcveriapiconfig.ini
      - lcvericonfig.ini
      - dblc.conf
      - initconfig
      - LBClientConfig.ini
      - LBServer.ini
      - lcconfig.ini
      - libdbapi.conf
      - NATConfig.ini
      - PFRingRelayServer.ini

  - name: template config/config file
    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{ProjectPath}}/config/config/{{ item }}
    with_items:
      - aasclient.conf
      - aasserver.conf
      - rcserver.ini 

  - name: template command config file
    copy: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{item }}
    with_items:
      - 17monipdb.dat
      - serverlist.ini
      - vidalccert.pem
      - vidalcprikey.pem
      # Alarm lib
      - libemailalarm.so
      - libsmsalarm.so
      
  - name: get svscan 
    shell: ps aux |grep -v grep | grep svscan |grep {{ServiceRoot}} | wc -l
    register: result 

  - name: template f
    shell: nohup svscan {{ServiceRoot}} &
    when: result.stdout == \"0\" 
    args:
      chdir: \"{{ ProjectPath }}\"
...",author="wentong",updatetime="2016-12-14 11:03:01",filepath="/data/web/testplaybook/Test_M4_Init1481684581.yml"where id=22
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:03:01', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  -[I 161214 11:03:01 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 4.62ms
[I 161214 11:03:03 web:1946] 304 GET /host (172.17.92.116) 18.18ms
[I 161214 11:03:03 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.01ms
[I 161214 11:03:05 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.82ms
[I 161214 11:03:07 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 4.89ms
[I 161214 11:03:41 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 32328.94ms
[I 161214 11:13:57 web:1946] 304 GET /argument (172.17.92.116) 17.30ms
[I 161214 11:13:57 web:1946] 304 GET /argument/page/1 (172.17.92.116) 5.57ms
[I 161214 11:13:59 web:1946] 304 GET /argument (172.17.92.116) 16.05ms
[I 161214 11:14:00 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.47ms
[I 161214 11:14:01 web:1946] 304 GET /addplaybook (172.17.92.116) 18.11ms
 name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
ok: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [apt-get install daemontools] ******************************************* 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
ok: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
ok: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
ok: [172.17.92.28]

TASK: [create log directory] ************************************************** 
ok: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
ok: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
ok: [172.17.92.28]

TASK: [create config directory] *********************************************** 
ok: [172.17.92.28]

TASK: [copy logs.sh script] *************************************************** 
ok: [172.17.92.28]

TASK: [template file] ********************************************************* 
ok: [172.17.92.28] => (item=LBServer.ini)
ok: [172.17.92.28] => (item=AlarmServer.ini)
ok: [172.17.92.28] => (item=cmserver.ini)
ok: [172.17.92.28] => (item=fwagent.ini)
ok: [172.17.92.28] => (item=lcclient.ini)
ok: [172.17.92.28] => (item=lcveriapiconfig.ini)
ok: [172.17.92.28] => (item=lcvericonfig.ini)
ok: [172.17.92.28] => (item=dblc.conf)
ok: [172.17.92.28] => (item=initconfig)
ok: [172.17.92.28] => (item=LBClientConfig.ini)
ok: [172.17.92.28] => (item=LBServer.ini)
ok: [172.17.92.28] => (item=lcconfig.ini)
ok: [172.17.92.28] => (item=libdbapi.conf)
ok: [172.17.92.28] => (item=NATConfig.ini)
ok: [172.17.92.28] => (item=PFRingRelayServer.ini)

TASK: [template config/config file] ******************************************* 
ok: [172.17.92.28] => (item=aasclient.conf)
ok: [172.17.92.28] => (item=aasserver.conf)
ok: [172.17.92.28] => (item=rcserver.ini)

TASK: [template command config file] ****************************************** 
ok: [172.17.92.28] => (item=17monipdb.dat)
ok: [172.17.92.28] => (item=serverlist.ini)
ok: [172.17.92.28] => (item=vidalccert.pem)
ok: [172.17.92.28] => (item=vidalcprikey.pem)
ok: [172.17.92.28] => (item=libemailalarm.so)
ok: [172.17.92.28] => (item=libsmsalarm.so)

TASK: [get svscan] ************************************************************ 
changed: [172.17.92.28]

TASK: [template f] ************************************************************ 
changed: [172.17.92.28]
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:03:01', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath[I 161214 11:14:01 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.41ms
[I 161215 17:10:29 web:1946] 304 GET /addplaybook (172.17.92.116) 15.56ms
[I 161215 17:10:32 web:1946] 304 GET /static/js/deltaops.js (172.17.92.116) 1.70ms
}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:03:01', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: [I 161215 17:10:32 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.47ms
[I 161215 17:11:58 web:1946] 304 GET /action (172.17.92.116) 36.68ms
[I 161215 17:11:58 web:1946] 304 GET /host/all (172.17.92.116) 4.78ms
[I 161215 17:11:58 web:1946] 200 GET /group/all (172.17.92.116) 3.17ms
[I 161215 17:11:58 web:1946] 200 GET /argument/all/ (172.17.92.116) 3.73ms
[I 161215 17:11:58 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 31.83ms
"{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      sh[I 161215 17:11:58 web:1946] 200 GET /playbookmanager/all/ (172.17.92.116) 4.52ms
[I 161215 17:12:00 web:1946] 304 GET /addplaybook (172.17.92.116) 17.44ms
ell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:03:01', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:03:01', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config sta[I 161215 17:12:00 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.17ms
[I 161215 17:14:55 web:1946] 304 GET /argument (172.17.92.116) 15.83ms
[I 161215 17:14:56 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.11ms
[I 161215 17:14:58 web:1946] 304 GET /argument/page/2 (172.17.92.116) 4.40ms
[I 161215 17:15:22 web:1946] 304 GET /addplaybook (172.17.92.116) 17.64ms
te=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-14 11:03:01', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daem[I 161215 17:15:22 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.06ms
ontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
DEBUG PUT22
UPDATE Playbook SET note="Test to init the m4 project",actionName="Test_M4_Init",actiontype="Service",playbook="---
- hosts: \"{{hosts}}\"
  tasks:
  - name: create project directory
    command: mkdir {{project}} -p
    args:
      chdir: /tmp
      creates: \"{{ project}}\"

  - name: apt-get install git
    apt: name=git state=latest
  - name: apt-get install daemontools
    apt: name=daemontools state=latest
   
  - name: clone server-tmp
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{project}}/server-tmp
    args:
      clone: yes
      force: yes
  - name: clone gitlib 
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{project}}/gitlibs
    args:
      clone: yes
      force: yes
  - name: ln -s lib gitlib
    file: src={{project}}/gitlibs dest={{project}}/libs state=link force=yes
 
  - name: clone gitbin
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{project}}/gitbin
    args:
      clone: yes
      force: yes
  - name: ln -s bin gitbin
    file: src={{project}}/gitbin dest={{project}}/bin state=link force=yes

  - name: create log directory 
    file: path={{project}}/logs state=directory
  - name: create service root dir 
    file: path={{project}}/{{serviceroot}} state=directory

  - name: copy initconfig 
    template: src=/data/ansible-playbook/config/initconfig dest={{project}}/{{serviceroot}}/initconfig

  - name: create config directory
    file: path={{project}}/config/config state=directory

  - name: copy logs.sh script  
    template: src=/data/ansible-playbook/config/logs.sh  dest={{project}}/logs/logs.sh

  - name: template file
    template: src=/data/ansible-playbook/config/{{ item }} dest={{project}}/config/{{ item }}
    with_items:
      - LBServer.ini
      - AlarmServer.ini
      - cmserver.ini
      - fwagent.ini
      - lcclient.ini
      - lcveriapiconfig.ini
      - lcvericonfig.ini
      - dblc.conf
      - initconfig
      - LBClientConfig.ini
      - LBServer.ini
      - lcconfig.ini
      - libdbapi.conf
      - NATConfig.ini
      - PFRingRelayServer.ini

  - name: template config/config file
    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{project}}/config/config/{{ item }}
    with_items:
      - aasclient.conf[I 161215 17:18:26 web:1946] 200 PUT /playbookmanager/id/22 (172.17.92.116) 177.50ms

      - aasserver.conf
      - rcserver.ini 

  - name: template command config file
    copy: src=/data/ansible-playbook/config/{{ item }} dest={{project}}/config/{{item }}
    with_items:
      - 17monipdb.dat
      - serverlist.ini
      - vidalccert.pem
      - vidalcprikey.pem
      # Alarm lib
      - libemailalarm.so
      - libsmsalarm.so
      
  - name: get svscan 
    shell: ps aux |grep -v grep | grep svscan |grep {{project}} | wc -l
    register: result 

  - name: template f
    shell: nohup svscan {{serviceroot}} &
    when: result.stdout == \"0\" 
    args:
      chdir: \"{{ project}}\"
...",author="wentong",updatetime="2016-12-15 17:18:25",filepath="/data/web/testplaybook/Test_M4_Init1481793505.yml"where id=22
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-15 17:18:25', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{project}} -p\n    args:\n      c[I 161215 17:18:26 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 4.06ms
[I 161215 17:18:28 web:1946] 304 GET /argument (172.17.92.116) 15.58ms
[I 161215 17:18:29 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.75ms
[I 161215 17:18:31 web:1946] 304 GET /argument/page/2 (172.17.92.116) 4.04ms
[I 161215 17:19:00 web:1946] 200 PUT /argument/id/32 (172.17.92.116) 27.24ms
[I 161215 17:19:00 web:1946] 200 GET /argument/page/2 (172.17.92.116) 4.36ms
[I 161215 17:21:40 web:1946] 200 PUT /argument/id/32 (172.17.92.116) 33.61ms
[I 161215 17:21:40 web:1946] 200 GET /argument/page/2 (172.17.92.116) 4.05ms
[I 161215 17:22:46 web:1946] 200 PUT /argument/id/32 (172.17.92.116) 65.88ms
[I 161215 17:22:46 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.36ms
[I 161215 17:22:49 web:1946] 304 GET /host (172.17.92.116) 19.31ms
[I 161215 17:22:49 web:1946] 304 GET /static/js/term.js (172.17.92.116) 3.60ms
[I 161215 17:22:49 web:1946] 304 GET /static/js/ws.js (172.17.92.116) 1.35ms
[I 161215 17:22:49 web:1946] 304 GET /static/js/formvalid.js (172.17.92.116) 1.34ms
[I 161215 17:22:49 web:1946] 304 GET /static/js/main.js (172.17.92.116) 41.56ms
[I 161215 17:22:49 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.18ms
[I 161215 17:22:51 web:1946] 304 GET /host/get/2 (172.17.92.116) 4.85ms
[I 161215 17:22:52 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 3.86ms
[I 161215 17:35:05 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 731874.71ms
[I 161215 17:35:05 web:1946] 304 GET /actionmanager/owner/host/35 (172.17.92.116) 3.36ms
[I 161215 17:35:05 web:1946] 304 GET /group/all (172.17.92.116) 2.90ms
[I 161215 17:35:05 web:1946] 200 GET /host/group/40 (172.17.92.116) 2.28ms
[I 161215 17:35:05 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 3.49ms
[I 161215 17:35:05 web:1946] 200 GET /actionmanager/owner/host/35 (172.17.92.116) 2.72ms
[I 161215 17:35:05 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 2.88ms
[I 161215 17:39:16 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 3.47ms
[I 161215 17:39:17 web:1946] 200 GET /actionmanager/history/45 (172.17.92.116) 4.05ms
[I 161215 17:39:40 web:1946] 304 GET /addplaybook (172.17.92.116) 15.35ms
hdir: /tmp\n      creates: "{{ project}}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{project}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{project}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{project}}/gitlibs dest={{project}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{project}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{project}}/gitbin dest={{project}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{project}}/logs state=directory\n  - name: create service root dir \n    file: path={{project}}/{{serviceroot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{project}}/{{serviceroot}}/initconfig\n\n  - name: create config directory\n    file: path={{project}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{project}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{project}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: t']
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
changed: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [apt-get install daemontools] ******************************************* 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
changed: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
changed: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
changed: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
changed: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
changed: [172.17.92.28]

TASK: [create log directory] ************************************************** 
changed: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
changed: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
fatal:DEBUG [172.17.92.28] => {'msg': "AnsibleUndefinedVariable: One or more undefined variables: 'ProjectPath' is undefined", 'failed': True}
fatal:DEBUG [172.17.92.28] => {'msg': "AnsibleUndefinedVariable: One or more undefined variables: 'ProjectPath' is undefined", 'failed': True}

FATAL: all hosts have already failed -- aborting
debug 1=========
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-15 17:18:25', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{project}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ project}}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{project}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{project}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{project}}/gitlibs dest={{project}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{project}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{projec[I 161215 17:39:41 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 3.99ms
[I 161215 17:40:02 web:1946] 304 GET /argument (172.17.92.116) 17.31ms
[I 161215 17:40:02 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.80ms
[I 161215 17:40:27 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.36ms
[I 161216 09:29:47 web:1946] 304 GET /addplaybook (172.17.92.116) 16.22ms
t}}/gitbin dest={{project}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{project}}/logs state=directory\n  - name: create service root dir \n    file: path={{project}}/{{serviceroot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{project}}/{{serviceroot}}/initconfig\n\n  - name: create config directory\n    file: path={{project}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{project}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{project}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: t']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch [I 161216 09:29:47 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.40ms
 chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-15 17:18:25', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{project}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ project}}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{project}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{project}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{project}}/gitlibs dest={{project}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{project}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{project}}/gitbin dest={{project}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{project}}/logs state=directory\n  - name: create service root dir \n    file: path={{project}}/{{serviceroot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{project}}/{{serviceroot}}/initconfig\n\n  - name: create config directory\n    file: path={{project}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{project}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{project}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n      - NATConfig.ini\n      - PFRingRelayServer.ini\n\n  - name: t']
DEBUG PUT22
UPDATE Playbook SET note="Test to init the m4 project",actionName="Test_M4_Init",actiontype="Service",playbook="---
- hosts: \"{{hosts}}\"
  tasks:
  - name: create project directory
    command: mkdir {{ProjectPath}} -p
    args:
      chdir: /tmp
      creates: \"{{ ProjectPath }}\"

  - name: apt-get install git
    apt: name=git state=latest
  - name: apt-get install daemontools
    apt: name=daemontools state=latest
   
  - name: clone server-tmp
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp
    args:
      clone: yes
      force: yes
  - name: clone gitlib 
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs
    args:
      clone: yes
      force: yes
  - name: ln -s lib gitlib
    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes
 
  - name: clone gitbin
    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin
    args:
      clone: yes
      force: yes
  - name: ln -s bin gitbin
    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes

  - name: create log directory 
    file: path={{ProjectPath}}/logs state=directory
  - name: create service root dir 
    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory

  - name: copy initconfig 
    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig

  - name: create config directory
    file: path={{ProjectPath}}/config/config state=directory

  - name: copy logs.sh script  
    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh

  - name: template file
    template: src=/data/ansible-playbook/config/{{ item }} dest={{Proj[I 161216 09:32:37 web:1946] 200 PUT /playbookmanager/id/22 (172.17.92.116) 108.09ms
ectPath}}/config/{{ item }}
    with_items:
      - LBServer.ini
      - AlarmServer.ini
      - cmserver.ini
      - fwagent.ini
      - lcclient.ini
      - lcveriapiconfig.ini
      - lcvericonfig.ini
      - dblc.conf
      - initconfig
      - LBClientConfig.ini
      - LBServer.ini
      - lcconfig.ini
      - libdbapi.conf
      - NATConfig.ini
      - PFRingRelayServer.ini

  - name: template config/config file
    template: src=/data/ansible-playbook/config/config/{{ item }} dest={{ProjectPath}}/config/config/{{ item }}
    with_items:
      - aasclient.conf
      - aasserver.conf
      - rcserver.ini 

  - name: template command config file
    copy: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{item }}
    with_items:
      - 17monipdb.dat
      - serverlist.ini
      - vidalccert.pem
      - vidalcprikey.pem
      # Alarm lib
      - libemailalarm.so
      - libsmsalarm.so
      
  - name: get svscan 
    shell: ps aux |grep -v grep | grep svscan |grep {{ServiceRoot}} | wc -l
    register: result 

  - name: template f
    shell: nohup svscan {{ServiceRoot}} &
    when: result.stdout == \"0\" 
    args:
      chdir: \"{{ ProjectPath }}\"
...",author="wentong",updatetime="2016-12-16 09:32:37",filepath="/data/web/testplaybook/Test_M4_Init1481851957.yml"where id=22
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch [I 161216 09:32:37 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 4.34ms
[I 161216 09:32:40 web:1946] 304 GET /argument (172.17.92.116) 15.49ms
[I 161216 09:32:40 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.93ms
[I 161216 09:36:35 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.42ms
[I 161216 09:36:53 web:1946] 200 PUT /argument/id/32 (172.17.92.116) 78.67ms
[I 161216 09:36:53 web:1946] 200 GET /argument/page/2 (172.17.92.116) 2.99ms
[I 161216 09:37:43 web:1946] 304 GET /addplaybook (172.17.92.116) 17.50ms
| grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    r[I 161216 09:37:44 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.19ms
[I 161216 10:07:55 web:1946] 200 POST /playbookmanager/id/ (172.17.92.116) 113.64ms
[I 161216 10:07:55 web:1946] 200 GET /playbookmanager/page/2 (172.17.92.116) 3.49ms
[I 161216 10:19:42 web:1946] 304 GET /addplaybook (172.17.92.116) 14.84ms
egister: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{Servi[I 161216 10:19:42 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 5.73ms
[I 161216 10:20:02 web:1946] 304 GET /argument (172.17.92.116) 15.60ms
[I 161216 10:20:02 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.65ms
[I 161216 10:21:26 web:1946] 200 POST /argument/id/ (172.17.92.116) 69.01ms
[I 161216 10:21:26 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.47ms
[I 161216 10:21:30 web:1946] 304 GET /addplaybook (172.17.92.116) 16.12ms
ceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:07:55', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n..[I 161216 10:21:30 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 3.92ms
[I 161216 10:21:52 web:1946] 304 GET /action (172.17.92.116) 16.45ms
[I 161216 10:21:52 web:1946] 304 GET /host/all (172.17.92.116) 3.47ms
[I 161216 10:21:52 web:1946] 304 GET /group/all (172.17.92.116) 2.58ms
.']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:07:55', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path=[I 161216 10:21:52 web:1946] 200 GET /playbookmanager/all/ (172.17.92.116) 5.61ms
[I 161216 10:21:52 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.47ms
[I 161216 10:21:52 web:1946] 200 GET /argument/all/ (172.17.92.116) 4.57ms
[I 161216 10:22:36 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 44.03ms
[I 161216 10:22:36 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.74ms
[I 161216 10:22:38 web:1946] 304 GET /host (172.17.92.116) 17.23ms
[I 161216 10:22:38 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.81ms
[I 161216 10:22:40 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.82ms
[I 161216 10:22:41 web:1946] 200 GET /actionmanager/owner/host/40 (172.17.92.116) 35.92ms
[I 161216 10:22:46 web:1946] 200 POST /actionmanager/run/46 (172.17.92.116) 3213.11ms
[I 161216 10:22:53 web:1946] 200 GET /actionmanager/history/46 (172.17.92.116) 3.71ms
[I 161216 10:24:11 autoreload:204] /usr/lib/pymodules/python2.7/ansible/callback_plugins/noop.py modified; restarting server
[I 161216 10:24:17 web:1946] 200 POST /actionmanager/run/46 (172.17.92.116) 3290.35ms
[I 161216 10:24:22 web:1946] 200 GET /actionmanager/history/46 (172.17.92.116) 5.38ms
[I 161216 10:25:46 web:1946] 304 GET /addplaybook (172.17.92.116) 17.88ms
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [check if have service root on server] ********************************** 
changed: [172.17.92.28]

TASK: [Copy server dir from server-tmp to server] ***************************** 
skipping: [172.17.92.28]

TASK: [svc start service] ***************************************************** 
changed: [172.17.92.28]

TASK: [kill service] ********************************************************** 
failed DEBUG: [172.17.92.28] => {"changed": true, "cmd": "./vlns/run stop", "delta": "0:00:00.003310", "end": "2016-12-16 10:24:33.413954", "rc": 127, "start": "2016-12-16 10:24:33.410644", "warnings": []}
stderr: /bin/sh: 1: ./vlns/run: not found

FATAL: all hosts have already failed -- aborting
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init th[I 161216 10:25:46 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.71ms
[I 161216 10:26:33 web:1946] 200 PUT /playbookmanager/id/23 (172.17.92.116) 87.19ms
e m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:07:55', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
DEBUG PUT23
UPDATE Playbook SET note="Start| Restart | Init  service",actionName="Test_Start_init_Server",actiontype="Service",playbook="---
- hosts: \"{{ hosts }}\"
  tasks:

  - name: check if have service root on server
    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l 
    register: ifHaveServerDir
 
  - name: Copy server dir from server-tmp to server
    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   
    when: ifHaveServerDir.stdout == \"0\"
    args:
      chdir: \"{{ ProjectPath }}\"

  - name: svc start service 
    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}

  - name: kill service 
    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}
...",author="wentong",updatetime="2016-12-16 10:26:33",filepath="/data/web/testplaybook/Test_Start_init_Server1481855193.yml"where id=23
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy i[I 161216 10:26:33 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 4.34ms
[I 161216 10:26:36 web:1946] 304 GET /host (172.17.92.116) 18.31ms
[I 161216 10:26:36 web:1946] 304 GET /static/js/main.js (172.17.92.116) 28.35ms
[I 161216 10:26:36 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.33ms
[I 161216 10:26:37 web:1946] 304 GET /host/get/2 (172.17.92.116) 4.92ms
[I 161216 10:26:39 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 5.53ms
[I 161216 10:26:44 web:1946] 200 POST /actionmanager/run/46 (172.17.92.116) 3789.97ms
[I 161216 10:26:53 web:1946] 200 GET /actionmanager/history/46 (172.17.92.116) 4.00ms
[I 161216 10:27:31 web:1946] 304 GET /addplaybook (172.17.92.116) 16.49ms
nitconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [check if have service root on server] ********************************** 
changed: [172.17.92.28]

TASK: [Copy server dir from server-tmp to server] ***************************** 
changed: [172.17.92.28]

TASK: [svc start service] ***************************************************** 
changed: [172.17.92.28]

TASK: [kill service] ********************************************************** 
failed DEBUG: [172.17.92.28] => {"changed": true, "cmd": "./vlns/run stop", "delta": "0:00:00.053515", "end": "2016-12-16 10:27:00.196846", "rc": 1, "start": "2016-12-16 10:27:00.143331", "warnings": []}
stderr: ./vlns/run: line 2: ./initconfig: No such file or directory
./vlns/run: line 2: ../initconfig: No such file or directory
vlns_: no process found

FATAL: all hosts have already failed -- aborting
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to ser[I 161216 10:27:32 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.47ms
[I 161216 10:28:28 web:1946] 304 GET /host (172.17.92.116) 18.74ms
[I 161216 10:28:28 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.45ms
[I 161216 10:28:30 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.15ms
[I 161216 10:28:32 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 4.89ms
[I 161216 10:28:33 web:1946] 304 GET /actionmanager/history/46 (172.17.92.116) 3.55ms
[I 161216 10:36:37 web:1946] 304 GET /host/get/3 (172.17.92.116) 3.30ms
[I 161216 10:36:38 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.37ms
[I 161216 10:36:39 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 3.46ms
[I 161216 10:36:42 web:1946] 304 GET /actionmanager/history/45 (172.17.92.116) 4.16ms
[I 161216 10:37:49 web:1946] 304 GET /actionmanager/owner/host/40 (172.17.92.116) 4.00ms
[I 161216 10:50:32 web:1946] 200 POST /actionmanager/run/45 (172.17.92.116) 760685.68ms
[I 161216 11:01:19 web:1946] 304 GET /addplaybook (172.17.92.116) 15.52ms
ver\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
run

PLAY [172.17.92.28] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [172.17.92.28]

TASK: [create project directory] ********************************************** 
changed: [172.17.92.28]

TASK: [apt-get install git] *************************************************** 
ok: [172.17.92.28]

TASK: [apt-get install daemontools] ******************************************* 
ok: [172.17.92.28]

TASK: [clone server-tmp] ****************************************************** 
changed: [172.17.92.28]

TASK: [clone gitlib] ********************************************************** 
changed: [172.17.92.28]

TASK: [ln -s lib gitlib] ****************************************************** 
changed: [172.17.92.28]

TASK: [clone gitbin] ********************************************************** 
changed: [172.17.92.28]

TASK: [ln -s bin gitbin] ****************************************************** 
changed: [172.17.92.28]

TASK: [create log directory] ************************************************** 
changed: [172.17.92.28]

TASK: [create service root dir] *********************************************** 
changed: [172.17.92.28]

TASK: [copy initconfig] ******************************************************* 
changed: [172.17.92.28]

TASK: [create config directory] *********************************************** 
changed: [172.17.92.28]

TASK: [copy logs.sh script] *************************************************** 
changed: [172.17.92.28]

TASK: [template file] ********************************************************* 
changed: [172.17.92.28] => (item=LBServer.ini)
changed: [172.17.92.28] => (item=AlarmServer.ini)
changed: [172.17.92.28] => (item=cmserver.ini)
changed: [172.17.92.28] => (item=fwagent.ini)
changed: [172.17.92.28] => (item=lcclient.ini)
changed: [172.17.92.28] => (item=lcveriapiconfig.ini)
changed: [172.17.92.28] => (item=lcvericonfig.ini)
changed: [172.17.92.28] => (item=dblc.conf)
changed: [172.17.92.28] => (item=initconfig)
changed: [172.17.92.28] => (item=LBClientConfig.ini)
ok: [172.17.92.28] => (item=LBServer.ini)
changed: [172.17.92.28] => (item=lcconfig.ini)
changed: [172.17.92.28] => (item=libdbapi.conf)
changed: [172.17.92.28] => (item=NATConfig.ini)
changed: [172.17.92.28] => (item=PFRingRelayServer.ini)

TASK: [template config/config file] ******************************************* 
changed: [172.17.92.28] => (item=aasclient.conf)
changed: [172.17.92.28] => (item=aasserver.conf)
changed: [172.17.92.28] => (item=rcserver.ini)

TASK: [template command config file] ****************************************** 
changed: [172.17.92.28] => (item=17monipdb.dat)
changed: [172.17.92.28] => (item=serverlist.ini)
changed: [172.17.92.28] => (item=vidalccert.pem)
changed: [172.17.92.28] => (item=vidalcprikey.pem)
changed: [172.17.92.28] => (item=libemailalarm.so)
changed: [172.17.92.28] => (item=libsmsalarm.so)

TASK: [get svscan] ************************************************************ 
changed: [172.17.92.28]

TASK: [template f] ************************************************************ 
changed: [172.17.92.28]
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name[I 161216 11:01:19 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.57ms
[I 161216 11:02:24 web:1946] 200 POST /playbookmanager/id/ (172.17.92.116) 78.54ms
: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show El[I 161216 11:02:24 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 5.00ms
[I 161216 11:02:29 web:1946] 304 GET /argument (172.17.92.116) 17.36ms
[I 161216 11:02:29 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.89ms
[I 161216 11:03:35 web:1946] 200 POST /argument/id/ (172.17.92.116) 36.69ms
[I 161216 11:03:35 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.26ms
[I 161216 11:03:37 web:1946] 304 GET /addplaybook (172.17.92.116) 17.86ms
asticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\[I 161216 11:03:37 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.08ms
[I 161216 11:03:45 web:1946] 304 GET /argument (172.17.92.116) 14.99ms
[I 161216 11:03:45 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.57ms
[I 161216 11:03:47 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.92ms
main.py:1117: Warning: Data truncated for column 'author' at row 1
  cur.execute(sql)
[I 161216 11:03:53 web:1946] 200 PUT /argument/id/34 (172.17.92.116) 12.75ms
[I 161216 11:03:53 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.61ms
[I 161216 11:04:03 web:1946] 200 PUT /argument/id/34 (172.17.92.116) 74.04ms
[I 161216 11:04:03 web:1946] 200 GET /argument/page/2 (172.17.92.116) 4.31ms
[I 161216 11:06:02 web:1946] 304 GET /action (172.17.92.116) 18.54ms
[I 161216 11:06:03 web:1946] 304 GET /host/all (172.17.92.116) 4.38ms
[I 161216 11:06:03 web:1946] 304 GET /group/all (172.17.92.116) 3.93ms
n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hos[I 161216 11:06:03 web:1946] 200 GET /playbookmanager/all/ (172.17.92.116) 4.29ms
[I 161216 11:06:03 web:1946] 200 GET /argument/all/ (172.17.92.116) 5.16ms
[I 161216 11:06:03 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.04ms
[I 161216 11:06:50 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 26.28ms
[I 161216 11:06:50 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.30ms
[I 161216 11:06:52 web:1946] 304 GET /host (172.17.92.116) 19.22ms
[I 161216 11:06:52 web:1946] 304 GET /static/js/term.js (172.17.92.116) 4.13ms
[I 161216 11:06:52 web:1946] 304 GET /static/js/ws.js (172.17.92.116) 1.93ms
[I 161216 11:06:52 web:1946] 304 GET /static/js/formvalid.js (172.17.92.116) 1.87ms
[I 161216 11:06:52 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.66ms
[I 161216 11:06:54 web:1946] 200 GET /actionmanager/owner/host/33 (172.17.92.116) 3.72ms
[I 161216 11:07:59 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 8797.79ms
[I 161216 11:08:03 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.80ms
[I 161216 11:08:11 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.92ms
[I 161216 11:08:26 web:1946] 304 GET /action (172.17.92.116) 21.25ms
[I 161216 11:08:26 web:1946] 304 GET /host/all (172.17.92.116) 3.31ms
[I 161216 11:08:26 web:1946] 304 GET /group/all (172.17.92.116) 2.64ms
ts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
DEBUG ACTION POST
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.18.38]
debug 1=========
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project d[I 161216 11:08:26 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 5.96ms
[I 161216 11:08:26 web:1946] 304 GET /argument/all/ (172.17.92.116) 4.15ms
[I 161216 11:08:26 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.58ms
[I 161216 11:08:29 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 31.96ms
[I 161216 11:08:45 web:1946] 304 GET /group (172.17.92.116) 76.98ms
[I 161216 11:08:45 web:1946] 304 GET /group/?page=1 (172.17.92.116) 2.95ms
[I 161216 11:09:00 web:1946] 200 POST /group/ (172.17.92.116) 75.89ms
[I 161216 11:09:00 web:1946] 304 GET /group/?page=1 (172.17.92.116) 2.97ms
[I 161216 11:09:03 web:1946] 200 GET /group/?page=2 (172.17.92.116) 3.11ms
[I 161216 11:09:04 web:1946] 200 GET /actionmanager/owner/hostgroup/22 (172.17.92.116) 3.86ms
[I 161216 11:09:11 web:1946] 304 GET /host (172.17.92.116) 21.30ms
[I 161216 11:09:11 web:1946] 304 GET /host/get/1 (172.17.92.116) 8.95ms
[I 161216 11:09:13 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.39ms
[I 161216 11:09:17 web:1946] 200 GET /group/all (172.17.92.116) 2.59ms
[I 161216 11:09:17 web:1946] 200 GET /host/group/33 (172.17.92.116) 3.20ms
[I 161216 11:09:21 web:1946] 200 POST /host/group/33 (172.17.92.116) 88.73ms
[I 161216 11:09:21 web:1946] 200 GET /host/get/1 (172.17.92.116) 4.63ms
[I 161216 11:09:23 web:1946] 304 GET /group/all (172.17.92.116) 3.66ms
[I 161216 11:09:23 web:1946] 200 GET /host/group/34 (172.17.92.116) 4.63ms
[I 161216 11:09:27 web:1946] 200 POST /host/group/33 (172.17.92.116) 30.95ms
[I 161216 11:09:27 web:1946] 200 GET /host/get/1 (172.17.92.116) 7.15ms
[I 161216 11:09:29 web:1946] 304 GET /host (172.17.92.116) 19.86ms
[I 161216 11:09:29 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.35ms
irectory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
<type 'int'>
<type 'int'>
<type 'int'>
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
33,[u'Webserver_CRM']
Webserver_CRM
22
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,22)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
33,[u'Webserver_CRM']
Webserver_CRM
22
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,22)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VL[I 161216 11:09:34 web:1946] 304 GET /group/all (172.17.92.116) 4.34ms
[I 161216 11:09:34 web:1946] 200 GET /host/group/33 (172.17.92.116) 3.85ms
[I 161216 11:09:38 web:1946] 200 DELETE /host/group/33 (172.17.92.116) 116.92ms
[I 161216 11:09:38 web:1946] 200 GET /host/get/1 (172.17.92.116) 8.25ms
[I 161216 11:09:41 web:1946] 304 GET /group/all (172.17.92.116) 3.04ms
[I 161216 11:09:41 web:1946] 200 GET /host/group/33 (172.17.92.116) 2.68ms
[I 161216 11:09:44 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.31ms
[I 161216 11:09:46 web:1946] 304 GET /host (172.17.92.116) 19.22ms
[I 161216 11:09:46 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.12ms
[I 161216 11:09:48 web:1946] 304 GET /group/all (172.17.92.116) 3.27ms
[I 161216 11:09:48 web:1946] 304 GET /host/group/33 (172.17.92.116) 2.31ms
[I 161216 11:09:55 web:1946] 200 POST /host/group/33 (172.17.92.116) 34.86ms
[I 161216 11:09:55 web:1946] 200 GET /host/get/1 (172.17.92.116) 7.29ms
[I 161216 11:09:56 web:1946] 304 GET /host (172.17.92.116) 15.77ms
[I 161216 11:09:56 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.04ms
[I 161216 11:09:59 web:1946] 304 GET /group/all (172.17.92.116) 2.55ms
[I 161216 11:09:59 web:1946] 304 GET /host/group/34 (172.17.92.116) 2.72ms
[I 161216 11:10:03 web:1946] 200 POST /host/group/34 (172.17.92.116) 48.64ms
[I 161216 11:10:03 web:1946] 200 GET /host/get/1 (172.17.92.116) 16.55ms
[I 161216 11:10:04 web:1946] 304 GET /host (172.17.92.116) 17.90ms
[I 161216 11:10:04 web:1946] 304 GET /host/get/1 (172.17.92.116) 7.15ms
[I 161216 11:11:12 web:1946] 304 GET /addplaybook (172.17.92.116) 17.45ms
N_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
33,[u'Webserver_CRM']
Webserver_CRM
22
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,22)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
34,[u'Webserver_CRM']
Webserver_CRM
22
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(34,22)
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\[I 161216 11:11:12 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.36ms
[I 161216 11:11:18 web:1946] 304 GET /action (172.17.92.116) 16.87ms
[I 161216 11:11:18 web:1946] 304 GET /host/all (172.17.92.116) 3.10ms
n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Grou[I 161216 11:11:18 web:1946] 304 GET /group/all (172.17.92.116) 3.17ms
p'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib g[I 161216 11:11:18 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.29ms
[I 161216 11:11:18 web:1946] 304 GET /argument/all/ (172.17.92.116) 4.36ms
[I 161216 11:11:18 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.56ms
[I 161216 11:11:20 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 6.40ms
[I 161216 11:11:36 web:1946] 200 PUT /actionmanager/id/47 (172.17.92.116) 158.37ms
[I 161216 11:11:36 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 5.20ms
[I 161216 11:11:39 web:1946] 304 GET /host (172.17.92.116) 19.46ms
[I 161216 11:11:39 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.18ms
[I 161216 11:11:41 web:1946] 200 GET /actionmanager/owner/host/34 (172.17.92.116) 3.46ms
[I 161216 11:11:52 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 7583.72ms
[I 161216 11:12:25 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.53ms
[I 161216 11:12:52 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 4321.09ms
[I 161216 11:12:55 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.49ms
[I 161216 11:47:53 web:1946] 304 GET /actionmanager/owner/host/34 (172.17.92.116) 2.91ms
itlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.12.74] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.025604", "end": "2016-12-16 11:09:48.092627", "rc": 1, "start": "2016-12-16 11:09:48.067023", "warnings": ["Consider using git module rather than running git"]}
stderr: error: cannot open .git/FETCH_HEAD: Permission denied

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.12.74] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.032097", "end": "2016-12-16 11:10:48.258143", "rc": 1, "start": "2016-12-16 11:10:48.226046", "warnings": ["Consider using git module rather than running git"]}
stderr: error: cannot open .git/FETCH_HEAD: Permission denied

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.12.74] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.025235", "end": "2016-12-16 11:45:56.054038", "rc": 1, "start": "2016-12-16 11:45:56.028803", "wa[I 161216 11:48:00 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 4785.67ms
[I 161216 11:48:13 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 4.33ms
[I 161216 11:49:07 web:1946] 304 GET /actionmanager/owner/host/34 (172.17.92.116) 3.34ms
[I 161216 11:49:12 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 3988.67ms
[I 161216 11:49:19 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 5.05ms
[I 161216 11:50:26 web:1946] 304 GET /actionmanager/owner/host/34 (172.17.92.116) 3.59ms
[I 161216 11:50:36 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 8396.93ms
[I 161216 11:50:40 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 4.64ms
[I 161216 11:52:50 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 13197.28ms
[I 161216 11:55:58 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.62ms
[I 161216 15:51:56 web:1946] 304 GET /addplaybook (172.17.92.116) 25.45ms
rnings": ["Consider using git module rather than running git"]}
stderr: error: cannot open .git/FETCH_HEAD: Permission denied

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.12.74] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.026282", "end": "2016-12-16 11:47:08.596095", "rc": 1, "start": "2016-12-16 11:47:08.569813", "warnings": ["Consider using git module rather than running git"]}
stderr: error: cannot open .git/FETCH_HEAD: Permission denied

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.12.74] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.179418", "end": "2016-12-16 11:48:32.976541", "rc": 1, "start": "2016-12-16 11:48:32.797123", "warnings": ["Consider using git module rather than running git"]}
stderr: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.12.74]
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}[I 161216 15:51:57 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.61ms
[I 161216 15:54:16 web:1946] 200 POST /playbookmanager/id/ (172.17.92.116) 65.81ms
/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin des[I 161216 15:54:16 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 5.29ms
[I 161216 15:54:24 web:1946] 304 GET /argument (172.17.92.116) 15.33ms
[I 161216 15:54:24 web:1946] 304 GET /argument/page/1 (172.17.92.116) 5.17ms
[I 161216 15:55:22 web:1946] 200 POST /argument/id/ (172.17.92.116) 71.41ms
[I 161216 15:55:22 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.63ms
[I 161216 15:55:41 web:1946] 304 GET /action (172.17.92.116) 17.75ms
[I 161216 15:55:42 web:1946] 304 GET /host/all (172.17.92.116) 3.46ms
[I 161216 15:55:42 web:1946] 304 GET /group/all (172.17.92.116) 3.17ms
t={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 15:54:16', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{S[I 161216 15:55:42 web:1946] 200 GET /playbookmanager/all/ (172.17.92.116) 3.14ms
[I 161216 15:55:42 web:1946] 200 GET /argument/all/ (172.17.92.116) 3.94ms
[I 161216 15:55:42 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 4.77ms
[I 161216 15:56:11 web:1946] 304 GET /host (172.17.92.116) 19.05ms
[I 161216 15:56:11 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.69ms
[I 161216 15:56:31 web:1946] 200 POST /host/post (172.17.92.116) 64.61ms
[I 161216 15:56:31 web:1946] 304 GET /host/get/1 (172.17.92.116) 8.72ms
[I 161216 15:56:33 web:1946] 200 GET /host/get/2 (172.17.92.116) 6.85ms
[I 161216 15:56:37 web:1946] 304 GET /action (172.17.92.116) 21.33ms
[I 161216 15:56:37 web:1946] 200 GET /host/all (172.17.92.116) 4.92ms
[I 161216 15:56:37 web:1946] 304 GET /group/all (172.17.92.116) 3.78ms
erviceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 15:54:16', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n  [I 161216 15:56:37 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.98ms
[I 161216 15:56:37 web:1946] 304 GET /argument/all/ (172.17.92.116) 3.58ms
[I 161216 15:56:37 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.23ms
[I 161216 15:57:08 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 46.26ms
[I 161216 15:57:08 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.19ms
[I 161216 15:57:10 web:1946] 304 GET /host (172.17.92.116) 19.46ms
[I 161216 15:57:11 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.13ms
[I 161216 15:57:12 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.45ms
[I 161216 15:57:13 web:1946] 200 GET /actionmanager/owner/host/42 (172.17.92.116) 5.13ms
[I 161216 15:57:21 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 6270.86ms
[I 161216 15:57:25 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 3.15ms
[I 161216 15:57:36 web:1946] 304 GET /argument (172.17.92.116) 15.92ms
[I 161216 15:57:37 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.64ms
[I 161216 15:57:39 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.85ms
[I 161216 15:57:46 web:1946] 304 GET /action (172.17.92.116) 16.21ms
[I 161216 15:57:46 web:1946] 304 GET /host/all (172.17.92.116) 5.31ms
[I 161216 15:57:46 web:1946] 304 GET /group/all (172.17.92.116) 5.60ms
    - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 15:54:16', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n...']
DEBUG ACTION POST
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
fatal:DEBUG [106.75.133.85] => One or more undefined variables: 'sourceRepo' is undefined

FATAL: all hosts have already failed -- aborting
debug 1=========
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconf[I 161216 15:57:46 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 4.40ms
[I 161216 15:57:46 web:1946] 304 GET /argument/all/ (172.17.92.116) 5.38ms
[I 161216 15:57:46 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.93ms
[I 161216 15:57:48 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 7.98ms
[I 161216 15:58:08 web:1946] 200 PUT /actionmanager/id/48 (172.17.92.116) 43.96ms
[I 161216 15:58:08 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 5.92ms
[I 161216 15:58:10 web:1946] 304 GET /host (172.17.92.116) 22.74ms
[I 161216 15:58:11 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.27ms
[I 161216 15:58:12 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.05ms
[I 161216 15:58:13 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 4.28ms
[I 161216 15:58:23 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 7202.66ms
[I 161216 15:58:26 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 4.13ms
[I 161216 15:58:39 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.27ms
[I 161216 15:58:41 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 4.17ms
[I 161216 15:58:53 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 9324.67ms
[I 161216 15:58:55 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.19ms
[I 161216 16:01:08 web:1946] 304 GET /host/get/2 (172.17.92.116) 4.66ms
[I 161216 16:01:09 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 3.40ms
ig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 15:54:16', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n...']
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
skipping: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
skipping: [106.75.133.85]
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.18.38] => {"changed": true, "cmd": "git pull", "delta": "0:00:01.396377", "end": "2016-12-16 15:56:49.097802", "rc": 1, "start": "2016-12-16 15:56:47.701425", "warnings": ["Consider using git module rather than running git"]}
stderr: From 119.28.49.228:/data/gitrepository/gitwebcrm
   2bb36c5..82b640d  master     -> origin/master
error: Your local changes to the following files would be overwritten by merge:
	.gitignore
Please, commit your changes or stash them before you can merge.
Aborting
stdout: Updating 2bb36c5..82b640d

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [10[I 161216 16:01:19 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 8374.42ms
[I 161216 16:04:04 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 3.84ms
[I 161216 16:06:04 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 3.47ms
[I 161216 16:07:43 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 8205.67ms
[I 161216 16:09:06 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 3.79ms
[I 161216 16:09:28 web:1946] 304 GET /actionmanager/history/48 (172.17.92.116) 4.04ms
[I 161216 16:13:34 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 9153.27ms
[I 161216 16:13:41 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 3.98ms
[I 161216 16:14:20 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.56ms
[I 161216 16:14:22 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 4.47ms
[I 161216 16:14:30 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 6882.77ms
[I 161216 16:14:33 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.16ms
[I 161216 16:15:26 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.83ms
[I 161216 16:17:54 web:1946] 304 GET /host/get/2 (172.17.92.116) 4.92ms
[I 161216 16:17:55 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 4.66ms
[I 161216 16:18:05 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 9315.02ms
[I 161216 16:18:16 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 4.00ms
[I 161216 16:18:19 web:1946] 304 GET /host/get/1 (172.17.92.116) 7.28ms
[I 161216 16:18:21 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.59ms
[I 161216 16:18:27 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 4614.21ms
[I 161216 16:18:55 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.87ms
[I 161216 16:19:15 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.92ms
[I 161216 16:19:16 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 4.55ms
[I 161216 16:19:18 web:1946] 304 GET /actionmanager/history/48 (172.17.92.116) 3.62ms
[I 161216 16:19:23 web:1946] 304 GET /actionmanager/history/48 (172.17.92.116) 3.50ms
[I 161216 16:22:00 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.66ms
[I 161216 16:22:01 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 4.06ms
6.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
failed DEBUG: [106.75.133.85] => {"changed": true, "cmd": "git add ./*", "delta": "0:00:00.312449", "end": "2016-12-16 15:59:14.888989", "rc": 128, "start": "2016-12-16 15:59:14.576540", "warnings": ["Consider using git module rather than running git"]}
stderr: The following paths are ignored by one of your .gitignore files:
logs
tmp
Use -f if you really want to add them.
fatal: no files added

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
failed DEBUG: [106.75.133.85] => {"changed": true, "cmd": "git add ./*", "delta": "0:00:00.302443", "end": "2016-12-16 16:05:38.838866", "rc": 128, "start": "2016-12-16 16:05:38.536423", "warnings": ["Consider using git module rather than running git"]}
stderr: The following paths are ignored by one of your .gitignore files:
logs
Use -f if you really want to add them.
fatal: no files added

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
skipping: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
skipping: [106.75.133.85]
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.18.38] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.436120", "end": "2016-12-16 16:12:26.204552", "rc": 1, "start": "2016-12-16 16:12:25.768432", "warnings": ["Consider using git module rather than running git"]}
stderr: error: Your local changes to the following files would be overwritten by merge:
	.gitignore
Please, commit your changes or stash them before you can merge.
Aborting
stdout: Updating 2bb36c5..82b640d

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
skipping: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
skipping: [106.75.133.85]
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.18.38]
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS ************[I 161216 16:22:08 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 5121.41ms
[I 161216 16:22:10 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 4.02ms
[I 161216 16:24:10 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 6939.51ms
[I 161216 16:24:18 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 7.61ms
[I 161216 16:24:47 web:1946] 304 GET /host/get/2 (172.17.92.116) 6.41ms
[I 161216 16:24:48 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 3.36ms
[I 161216 16:24:59 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 9093.44ms
[I 161216 16:25:04 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.53ms
[I 161216 16:25:05 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 4.10ms
[I 161216 16:25:11 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 4280.92ms
[I 161216 16:25:12 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.42ms
[I 161216 16:25:22 web:1946] 304 GET /actionmanager/owner/host/34 (172.17.92.116) 5.08ms
[I 161216 16:25:37 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 6205.17ms
[I 161216 16:25:40 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 4.02ms
[I 161216 16:35:59 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.12ms
[I 161216 16:36:01 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 4.61ms
[I 161216 16:36:14 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 9518.65ms
[I 161216 16:36:19 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.83ms
[I 161216 16:36:29 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.46ms
[I 161216 16:36:40 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 9178.26ms
[I 161216 16:36:59 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 4.19ms
[I 161216 16:37:08 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 4.58ms
[I 161216 16:38:20 web:1946] 304 GET /host/get/2 (172.17.92.116) 5.71ms
[I 161216 16:38:21 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 4.85ms
[I 161216 16:38:23 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 5.01ms
[I 161216 16:39:45 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 3.38ms
[I 161216 16:41:54 web:1946] 304 GET /addplaybook (172.17.92.116) 16.04ms
*************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
failed DEBUG: [119.28.18.38] => {"changed": true, "cmd": "git pull", "delta": "0:00:00.451195", "end": "2016-12-16 16:20:03.744084", "rc": 1, "start": "2016-12-16 16:20:03.292889", "warnings": ["Consider using git module rather than running git"]}
stderr: From 119.28.49.228:/data/gitrepository/gitwebcrm
   82b640d..8bf2d98  master     -> origin/master
error: Your local changes to the following files would be overwritten by merge:
	logs/error.log
	tmp/cache/models/myapp_cake_model_default_dbusers
	tmp/cache/models/myapp_cake_model_default_device_sns
	tmp/cache/models/myapp_cake_model_default_devices
	tmp/cache/models/myapp_cake_model_default_order_products
	tmp/cache/models/myapp_cake_model_default_orders
	tmp/cache/models/myapp_cake_model_default_products
	tmp/cache/models/myapp_cake_model_default_user_logs
Please, commit your changes or stash them before you can merge.
Aborting
stdout: Updating 82b640d..8bf2d98

FATAL: all hosts have already failed -- aborting
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.18.38]
debug 1=========
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
skipping: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
skipping: [106.75.133.85]
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.18.38]
debug 1=========
run

PLAY [119.28.12.74] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.12.74]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.12.74]
debug 1=========
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
skipping: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
skipping: [106.75.133.85]
debug 1=========
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.18.38]
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log [I 161216 16:41:54 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.23ms
directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 15:54:16', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit == "0"\n...']
DEBUG PUT25
UPDATE Playbook SET note="sync web test git responsitory to product responsitory and push the change to server.",actionName="Rsync_TestRepo_2_ProRepo",actiontype="Deploy",playbook="---
- hosts: 106.75.133.85
  tasks:
  - name: Update test-gitrpo to pro-gitrpo use rsync
    shell: rsync -ac --delete --exclude-from='./{{sourceRepo}}/rsync.ini' {{sourceRepo}}/ {{destRepo}}/
    args:
      chdir: /data/M4-Product/www
  
  - name: Add  all change to Product git responsitory 
    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}
  
  - name: Check if need to commit 
    shell: git status | grep \"nothing to commit\" |wc -l chdir=/data/M4-Product/www/{{destRepo}}
    register: needcommit

  - name: Commit  all change to Product git responsitory 
    shell: git commit -a -m '{{destRepo}}' chdir=/data/M4-Product/www/{{destRepo}}
    when: needcommit.stdout == \"0\"

  - name: Push the change to git server
    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}
    when: needcommit.stdout == \"0\"
...",author="wentong",updatetime="2016-12-16 16:42:13",filepath[I 161216 16:42:13 web:1946] 200 PUT /playbookmanager/id/25 (172.17.92.116) 69.45ms
="/data/web/testplaybook/Rsync_TestRepo_2_ProRepo1481877733.yml"where id=25
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \[I 161216 16:42:13 web:1946] 200 GET /playbookmanager/page/1 (172.17.92.116) 5.08ms
[I 161216 16:44:06 web:1946] 304 GET /addplaybook (172.17.92.116) 15.62ms
n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template[I 161216 16:44:06 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.34ms
[I 161216 16:44:32 web:1946] 304 GET /host (172.17.92.116) 24.18ms
[I 161216 16:44:33 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.44ms
[I 161216 16:44:36 web:1946] 304 GET /host/get/2 (172.17.92.116) 6.33ms
[I 161216 16:44:38 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 3.77ms
[I 161216 16:44:51 web:1946] 200 POST /actionmanager/run/48 (172.17.92.116) 12167.58ms
[I 161216 16:44:53 web:1946] 200 GET /actionmanager/history/48 (172.17.92.116) 4.28ms
[I 161216 16:45:43 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.14ms
[I 161216 16:45:56 web:1946] 304 GET /group (172.17.92.116) 17.92ms
[I 161216 16:45:56 web:1946] 304 GET /group/?page=1 (172.17.92.116) 8.26ms
[I 161216 16:46:00 web:1946] 200 GET /actionmanager/owner/hostgroup/14 (172.17.92.116) 3.11ms
[I 161216 16:46:13 web:1946] 304 GET /host (172.17.92.116) 19.10ms
[I 161216 16:46:13 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.12ms
[I 161216 16:46:15 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.87ms
[I 161216 16:46:26 web:1946] 200 POST /actionmanager/run/47 (172.17.92.116) 9969.79ms
[I 161216 16:46:28 web:1946] 200 GET /actionmanager/history/47 (172.17.92.116) 3.68ms
[I 161216 16:47:36 web:1946] 304 GET /action (172.17.92.116) 30.42ms
[I 161216 16:47:36 web:1946] 304 GET /host/all (172.17.92.116) 4.22ms
: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
changed: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
changed: [106.75.133.85]
debug 1=========
<type 'int'>
run

PLAY [119.28.18.38] *********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [119.28.18.38]

TASK: [Update to latest version] ********************************************** 
changed: [119.28.18.38]
debug 1=========
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/con[I 161216 16:47:36 web:1946] 200 GET /playbookmanager/all/ (172.17.92.116) 4.78ms
[I 161216 16:47:36 web:1946] 304 GET /group/all (172.17.92.116) 2.78ms
[I 161216 16:47:36 web:1946] 304 GET /argument/all/ (172.17.92.116) 9.79ms
[I 161216 16:47:36 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 9.62ms
[I 161216 16:48:25 web:1946] 304 GET /argument (172.17.92.116) 15.70ms
[I 161216 16:48:25 web:1946] 304 GET /argument/page/1 (172.17.92.116) 5.04ms
[I 161216 16:48:27 web:1946] 304 GET /argument/page/2 (172.17.92.116) 4.97ms
[I 161216 16:48:50 web:1946] 304 GET /action (172.17.92.116) 17.15ms
[I 161216 16:48:50 web:1946] 304 GET /host/all (172.17.92.116) 5.43ms
[I 161216 16:48:50 web:1946] 304 GET /group/all (172.17.92.116) 2.49ms
fig/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template[I 161216 16:48:50 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 4.73ms
[I 161216 16:48:50 web:1946] 304 GET /argument/all/ (172.17.92.116) 3.48ms
[I 161216 16:48:50 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.81ms
[I 161216 16:48:56 web:1946] 304 GET /host (172.17.92.116) 25.66ms
[I 161216 16:48:56 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.54ms
[I 161216 16:48:59 web:1946] 304 GET /actionmanager/owner/host/33 (172.17.92.116) 3.91ms
[I 161216 16:49:22 web:1946] 304 GET /addplaybook (172.17.92.116) 16.34ms
: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir[I 161216 16:49:23 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.98ms
[I 161216 16:52:32 web:1946] 304 GET /argument (172.17.92.116) 20.75ms
[I 161216 16:52:32 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.71ms
[I 161216 16:52:35 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.88ms
[I 161216 16:54:59 web:1946] 304 GET /action (172.17.92.116) 17.81ms
[I 161216 16:54:59 web:1946] 304 GET /host/all (172.17.92.116) 3.05ms
[I 161216 16:54:59 web:1946] 304 GET /group/all (172.17.92.116) 3.17ms
[I 161216 16:54:59 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.95ms
 from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to lat[I 161216 16:54:59 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 5.30ms
[I 161216 16:54:59 web:1946] 304 GET /argument/all/ (172.17.92.116) 4.21ms
[I 161216 16:55:08 web:1946] 304 GET /addplaybook (172.17.92.116) 17.44ms
est version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\[I 161216 16:55:09 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.98ms
[I 161216 17:13:44 web:1946] 304 GET /addplaybook (172.17.92.116) 14.69ms
[I 161216 17:13:45 web:1946] 304 GET /static/js/deltaops.js (172.17.92.116) 1.93ms
n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone g[I 161216 17:13:45 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.48ms
[I 161219 09:21:38 web:1946] 304 GET /addplaybook (172.17.92.116) 121.34ms
[I 161219 09:21:47 web:1946] 304 GET /static/js/deltaops.js (172.17.92.116) 14.93ms
itlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig[I 161219 09:21:47 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.28ms
[I 161219 09:22:14 web:1946] 304 GET /addplaybook (172.17.92.116) 16.43ms
[I 161219 09:23:09 web:1946] 304 GET /addplaybook (172.17.92.116) 16.85ms
\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root [I 161219 09:23:12 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.81ms
[I 161219 10:10:46 web:1946] 304 GET /argument (172.17.92.116) 112.61ms
[I 161219 10:10:47 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.14ms
[I 161219 10:10:53 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.77ms
[I 161219 10:10:57 web:1946] 304 GET /argument (172.17.92.116) 17.58ms
[I 161219 10:10:57 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.94ms
[I 161219 10:11:15 web:1946] 304 GET /addplaybook (172.17.92.116) 16.88ms
on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsit[I 161219 10:11:15 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 4.64ms
[I 161219 10:13:51 web:1946] 304 GET /addplaybook (172.17.92.116) 14.65ms
ory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push orig[I 161219 10:13:51 web:1946] 304 GET /playbookmanager/page/1 (172.17.92.116) 5.74ms
[I 161219 10:13:53 web:1946] 304 GET /argument (172.17.92.116) 15.42ms
[I 161219 10:13:53 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.37ms
[I 161219 10:14:30 web:1946] 200 POST /argument/id/ (172.17.92.116) 377.55ms
[I 161219 10:14:30 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.46ms
[I 161219 10:14:33 web:1946] 304 GET /action (172.17.92.116) 44.45ms
[I 161219 10:14:33 web:1946] 304 GET /host/all (172.17.92.116) 3.39ms
[I 161219 10:14:33 web:1946] 304 GET /group/all (172.17.92.116) 2.58ms
in  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh:[I 161219 10:14:33 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.67ms
[I 161219 10:14:33 web:1946] 200 GET /argument/all/ (172.17.92.116) 3.80ms
[I 161219 10:14:33 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.73ms
[I 161219 10:14:34 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 6.29ms
[I 161219 10:14:41 web:1946] 200 GET /actionmanager/page/3 (172.17.92.116) 3.43ms
[I 161219 10:14:42 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 6.68ms
[I 161219 10:14:47 web:1946] 304 GET /host (172.17.92.116) 43.27ms
[I 161219 10:14:47 web:1946] 304 GET /static/js/term.js (172.17.92.116) 89.33ms
[I 161219 10:14:47 web:1946] 304 GET /static/js/ws.js (172.17.92.116) 6.92ms
[I 161219 10:14:47 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.36ms
[I 161219 10:14:47 web:1946] 304 GET /static/js/main.js (172.17.92.116) 21.26ms
[I 161219 10:14:47 web:1946] 304 GET /static/js/formvalid.js (172.17.92.116) 17.46ms
[I 161219 10:14:56 web:1946] 304 GET /group (172.17.92.116) 16.36ms
[I 161219 10:14:56 web:1946] 304 GET /group/?page=1 (172.17.92.116) 3.05ms
[I 161219 10:15:02 web:1946] 200 POST /group/ (172.17.92.116) 87.57ms
[I 161219 10:15:02 web:1946] 304 GET /group/?page=1 (172.17.92.116) 3.28ms
[I 161219 10:15:04 web:1946] 304 GET /host (172.17.92.116) 21.16ms
[I 161219 10:15:04 web:1946] 304 GET /host/get/1 (172.17.92.116) 8.94ms
//git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
<type 'int'>
<type 'int'>
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L,[I 161219 10:15:08 web:1946] 200 GET /group/all (172.17.92.116) 4.68ms
[I 161219 10:15:08 web:1946] 200 GET /host/group/33 (172.17.92.116) 3.10ms
[I 161219 10:15:11 web:1946] 200 POST /host/group/33 (172.17.92.116) 47.73ms
[I 161219 10:15:11 web:1946] 200 GET /host/get/1 (172.17.92.116) 9.63ms
[I 161219 10:15:15 web:1946] 304 GET /group/all (172.17.92.116) 3.21ms
[I 161219 10:15:15 web:1946] 200 GET /host/group/34 (172.17.92.116) 2.84ms
[I 161219 10:15:18 web:1946] 200 POST /host/group/33 (172.17.92.116) 51.97ms
[I 161219 10:15:18 web:1946] 200 GET /host/get/1 (172.17.92.116) 13.01ms
[I 161219 10:15:20 web:1946] 304 GET /host (172.17.92.116) 17.93ms
[I 161219 10:15:21 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.76ms
[I 161219 10:15:23 web:1946] 304 GET /group/all (172.17.92.116) 4.06ms
[I 161219 10:15:23 web:1946] 200 GET /host/group/33 (172.17.92.116) 2.61ms
[I 161219 10:15:27 web:1946] 200 DELETE /host/group/33 (172.17.92.116) 45.37ms
[I 161219 10:15:27 web:1946] 200 GET /host/get/1 (172.17.92.116) 7.44ms
[I 161219 10:15:29 web:1946] 304 GET /host (172.17.92.116) 20.63ms
[I 161219 10:15:29 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.53ms
[I 161219 10:15:31 web:1946] 304 GET /group/all (172.17.92.116) 4.27ms
[I 161219 10:15:31 web:1946] 200 GET /host/group/33 (172.17.92.116) 2.76ms
[I 161219 10:15:34 web:1946] 200 POST /host/group/33 (172.17.92.116) 78.27ms
[I 161219 10:15:34 web:1946] 200 GET /host/get/1 (172.17.92.116) 8.58ms
[I 161219 10:15:35 web:1946] 304 GET /host (172.17.92.116) 18.58ms
[I 161219 10:15:36 web:1946] 304 GET /host/get/1 (172.17.92.116) 7.63ms
[I 161219 10:15:37 web:1946] 304 GET /group/all (172.17.92.116) 3.37ms
[I 161219 10:15:37 web:1946] 304 GET /host/group/34 (172.17.92.116) 3.24ms
[I 161219 10:15:40 web:1946] 200 POST /host/group/34 (172.17.92.116) 46.79ms
[I 161219 10:15:40 web:1946] 200 GET /host/get/1 (172.17.92.116) 8.24ms
[I 161219 10:15:42 web:1946] 304 GET /host (172.17.92.116) 18.24ms
[I 161219 10:15:42 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.20ms
[I 161219 10:15:47 web:1946] 304 GET /action (172.17.92.116) 17.50ms
[I 161219 10:15:47 web:1946] 304 GET /host/all (172.17.92.116) 3.62ms
[I 161219 10:15:47 web:1946] 304 GET /group/all (172.17.92.116) 3.59ms
[I 161219 10:15:47 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.36ms
[I 161219 10:15:47 web:1946] 304 GET /argument/all/ (172.17.92.116) 3.37ms
 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
33,[u'webserver_iot']
webserver_iot
23
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,23)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
33,[u'webserver_iot']
webserver_iot
23
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,23)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
33,[u'webserver_iot']
webserver_iot
23
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,23)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
34,[u'webserver_iot']
webserver_iot
23
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(34,23)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServ[I 161219 10:15:47 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 4.49ms
[I 161219 10:15:57 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 8.66ms
[I 161219 10:16:26 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 46.06ms
[I 161219 10:16:26 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 9.85ms
[I 161219 10:17:20 web:1946] 304 GET /argument (172.17.92.116) 17.67ms
[I 161219 10:17:20 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.86ms
[I 161219 10:17:23 web:1946] 200 GET /argument/page/2 (172.17.92.116) 6.34ms
[I 161219 10:17:32 web:1946] 200 DELETE /argument/id/36 (172.17.92.116) 116.02ms
[I 161219 10:17:35 web:1946] 304 GET /action (172.17.92.116) 17.24ms
[I 161219 10:17:35 web:1946] 304 GET /host/all (172.17.92.116) 4.35ms
[I 161219 10:17:35 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.83ms
[I 161219 10:17:35 web:1946] 304 GET /argument/all/ (172.17.92.116) 4.91ms
erDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
DEBUG ACTION POST
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hos[I 161219 10:17:35 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 4.04ms
[I 161219 10:17:35 web:1946] 304 GET /group/all (172.17.92.116) 3.39ms
[I 161219 10:17:37 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 5.88ms
[I 161219 10:17:38 web:1946] 304 GET /actionmanager/page/3 (172.17.92.116) 3.66ms
[I 161219 10:17:39 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 8.60ms
[I 161219 10:17:43 web:1946] 200 DELETE /actionmanager/id/49 (172.17.92.116) 7.66ms
[I 161219 10:17:43 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 4.97ms
[I 161219 10:17:46 web:1946] 304 GET /argument (172.17.92.116) 16.15ms
[I 161219 10:17:46 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.38ms
[I 161219 10:17:49 web:1946] 304 GET /argument/page/2 (172.17.92.116) 4.03ms
[I 161219 10:17:53 web:1946] 200 DELETE /argument/id/36 (172.17.92.116) 71.75ms
[I 161219 10:17:53 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.43ms
[I 161219 10:18:37 web:1946] 200 POST /argument/id/ (172.17.92.116) 96.65ms
[I 161219 10:18:37 web:1946] 200 GET /argument/page/2 (172.17.92.116) 5.03ms
[I 161219 10:19:18 web:1946] 304 GET /action (172.17.92.116) 18.01ms
[I 161219 10:19:19 web:1946] 304 GET /host/all (172.17.92.116) 3.28ms
[I 161219 10:19:19 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.79ms
[I 161219 10:19:19 web:1946] 200 GET /argument/all/ (172.17.92.116) 4.27ms
ts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to c[I 161219 10:19:19 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 4.82ms
[I 161219 10:19:19 web:1946] 304 GET /group/all (172.17.92.116) 2.90ms
[I 161219 10:19:20 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 6.43ms
[I 161219 10:19:59 web:1946] 304 GET /argument (172.17.92.116) 17.29ms
[I 161219 10:19:59 web:1946] 304 GET /argument/page/1 (172.17.92.116) 4.65ms
[I 161219 10:20:01 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.59ms
[I 161219 10:21:37 web:1946] 200 POST /argument/id/ (172.17.92.116) 72.02ms
[I 161219 10:21:37 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.96ms
[I 161219 10:23:39 web:1946] 304 GET /action (172.17.92.116) 16.30ms
[I 161219 10:23:39 web:1946] 304 GET /group/all (172.17.92.116) 2.94ms
ommit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chd[I 161219 10:23:39 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.61ms
[I 161219 10:23:39 web:1946] 304 GET /host/all (172.17.92.116) 2.73ms
[I 161219 10:23:39 web:1946] 200 GET /argument/all/ (172.17.92.116) 5.38ms
[I 161219 10:23:39 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.47ms
[I 161219 10:23:44 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 5.13ms
[I 161219 10:23:51 web:1946] 304 GET /action (172.17.92.116) 20.77ms
[I 161219 10:23:51 web:1946] 304 GET /host/all (172.17.92.116) 4.53ms
[I 161219 10:23:51 web:1946] 304 GET /group/all (172.17.92.116) 2.63ms
[I 161219 10:23:51 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.19ms
[I 161219 10:23:51 web:1946] 304 GET /argument/all/ (172.17.92.116) 3.69ms
ir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  t[I 161219 10:23:51 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.83ms
[I 161219 10:23:52 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 5.36ms
[I 161219 10:24:34 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 141.88ms
[I 161219 10:24:34 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 8.85ms
asks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
DEBUG ACTION POST
DEBUG ACTION POST[I 161219 10:25:23 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 118.53ms
[I 161219 10:25:23 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 6.39ms
[I 161219 10:27:40 web:1946] 304 GET /host (172.17.92.116) 19.69ms
[I 161219 10:27:40 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.83ms
[I 161219 10:27:41 web:1946] 304 GET /host/get/2 (172.17.92.116) 7.76ms
[I 161219 10:27:43 web:1946] 200 GET /actionmanager/owner/host/42 (172.17.92.116) 4.30ms
[I 161219 10:27:59 web:1946] 200 POST /actionmanager/run/50 (172.17.92.116) 13782.52ms
[I 161219 10:28:07 web:1946] 200 GET /actionmanager/history/50 (172.17.92.116) 4.31ms
[I 161219 10:28:34 web:1946] 304 GET /actionmanager/owner/host/42 (172.17.92.116) 3.84ms
[I 161219 11:30:20 web:1946] 304 GET /argument (172.17.92.116) 16.04ms
[I 161219 11:30:20 web:1946] 304 GET /argument/page/1 (172.17.92.116) 3.94ms
[I 161219 11:30:22 web:1946] 304 GET /argument/page/2 (172.17.92.116) 3.65ms
[I 161219 11:31:24 web:1946] 200 POST /argument/id/ (172.17.92.116) 58.32ms
[I 161219 11:31:24 web:1946] 200 GET /argument/page/2 (172.17.92.116) 4.31ms
[I 161219 11:32:12 web:1946] 200 POST /argument/id/ (172.17.92.116) 60.26ms
[I 161219 11:32:12 web:1946] 200 GET /argument/page/2 (172.17.92.116) 3.96ms
[I 161219 11:32:14 web:1946] 200 GET /argument/page/3 (172.17.92.116) 4.16ms
[I 161219 11:32:17 web:1946] 304 GET /action (172.17.92.116) 18.47ms
[I 161219 11:32:17 web:1946] 304 GET /host/all (172.17.92.116) 5.15ms
[I 161219 11:32:17 web:1946] 304 GET /group/all (172.17.92.116) 3.49ms

run

PLAY [106.75.133.85] ********************************************************** 

GATHERING FACTS *************************************************************** 
ok: [106.75.133.85]

TASK: [Update test-gitrpo to pro-gitrpo use rsync] **************************** 
changed: [106.75.133.85]

TASK: [Add  all change to Product git responsitory] *************************** 
changed: [106.75.133.85]

TASK: [Check if need to commit] *********************************************** 
changed: [106.75.133.85]

TASK: [Commit  all change to Product git responsitory] ************************ 
changed: [106.75.133.85]

TASK: [Push the change to git server] ***************************************** 
changed: [106.75.133.85]
debug 1=========
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPath}}\n...']
['25', 'Rsync_TestRepo_2_ProRepo', 'Deploy', 'wentong', 'sync web test git responsitory to product responsitory and push the change to server.', '2016-12-16 16:42:13', '---\n- hosts: 106.75.133.85\n  tasks:\n  - name: Update test-gitrpo to pro-gitrpo use rsync\n    shell: rsync -ac --delete --exclude-from=\'./{{sourceRepo}}/rsync.ini\' {{sourceRepo}}/ {{destRepo}}/\n    args:\n      chdir: /data/M4-Product/www\n  \n  - name: Add  all change to Product git responsitory \n    shell: git add ./*  chdir=/data/M4-Product/www/{{destRepo}}\n  \n  - name: Check if need to commit \n    shell: git status | grep "nothing to commit" |wc -l chdir=/data/M4-Product/www/{{destRepo}}\n    register: needcommit\n\n  - name: Commit  all change to Product git [I 161219 11:32:17 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.82ms
[I 161219 11:32:17 web:1946] 200 GET /argument/all/ (172.17.92.116) 3.49ms
[I 161219 11:32:17 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 6.29ms
[I 161219 11:32:20 web:1946] 304 GET /actionmanager/page/2 (172.17.92.116) 7.16ms
[I 161219 11:33:06 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 55.63ms
[I 161219 11:33:06 web:1946] 200 GET /actionmanager/page/2 (172.17.92.116) 6.67ms
[I 161219 11:33:29 web:1946] 304 GET /group (172.17.92.116) 19.24ms
[I 161219 11:33:29 web:1946] 304 GET /group/?page=1 (172.17.92.116) 3.44ms
[I 161219 11:33:37 web:1946] 200 POST /group/ (172.17.92.116) 50.02ms
[I 161219 11:33:37 web:1946] 304 GET /group/?page=1 (172.17.92.116) 4.40ms
[I 161219 11:33:38 web:1946] 304 GET /host (172.17.92.116) 17.62ms
[I 161219 11:33:38 web:1946] 304 GET /host/get/1 (172.17.92.116) 10.36ms
[I 161219 11:33:42 web:1946] 200 GET /group/all (172.17.92.116) 3.05ms
[I 161219 11:33:42 web:1946] 200 GET /host/group/33 (172.17.92.116) 3.49ms
[I 161219 11:33:46 web:1946] 200 POST /host/group/33 (172.17.92.116) 17.48ms
[I 161219 11:33:46 web:1946] 200 GET /host/get/1 (172.17.92.116) 8.58ms
[I 161219 11:33:48 web:1946] 304 GET /host (172.17.92.116) 19.70ms
[I 161219 11:33:48 web:1946] 304 GET /host/get/1 (172.17.92.116) 5.65ms
[I 161219 11:33:50 web:1946] 304 GET /group/all (172.17.92.116) 3.17ms
[I 161219 11:33:50 web:1946] 200 GET /host/group/34 (172.17.92.116) 3.18ms
[I 161219 11:33:53 web:1946] 200 POST /host/group/34 (172.17.92.116) 116.32ms
[I 161219 11:33:53 web:1946] 200 GET /host/get/1 (172.17.92.116) 8.10ms
[I 161219 11:33:54 web:1946] 304 GET /host (172.17.92.116) 18.89ms
[I 161219 11:33:54 web:1946] 304 GET /host/get/1 (172.17.92.116) 6.89ms
[I 161219 11:33:58 web:1946] 304 GET /action (172.17.92.116) 16.99ms
[I 161219 11:33:58 web:1946] 304 GET /host/all (172.17.92.116) 3.89ms
[I 161219 11:33:58 web:1946] 304 GET /group/all (172.17.92.116) 2.56ms
[I 161219 11:33:58 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.87ms
[I 161219 11:33:58 web:1946] 304 GET /argument/all/ (172.17.92.116) 4.41ms
responsitory \n    shell: git commit -a -m \'{{destRepo}}\' chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n\n  - name: Push the change to git server\n    shell: git push origin  master chdir=/data/M4-Product/www/{{destRepo}}\n    when: needcommit.stdout == "0"\n...']
DEBUG ACTION POST
<type 'int'>
<type 'int'>
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot'], 24L: [24L, 'webserver_restapi']}}
33,[u'webserver_restapi']
webserver_restapi
24
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(33,24)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot'], 24L: [24L, 'webserver_restapi']}}
34,[u'webserver_restapi']
webserver_restapi
24
INSERT INTO Map_Host_Group(HostID,GroupID) VALUES(34,24)
{'status': 'success', 'data': {1L: [1L, 'TestServer'], 3L: [3L, 'vlndhcp'], 11L: [11L, 'VLN_GROUP'], 12L: [12L, 'M4_LBServer'], 13L: [13L, 'AAS_Group'], 14L: [14L, 'LBS_Group'], 15L: [15L, 'CMS_Group'], 16L: [16L, 'UPLOAD_Group'], 17L: [17L, 'ALARM_Group'], 18L: [18L, 'LCS_Group'], 19L: [19L, 'VLNDHCP_Group'], 20L: [20L, 'Firewall_Group'], 21L: [21L, 'Test_init'], 22L: [22L, 'Webserver_CRM'], 23L: [23L, 'webserver_iot'], 24L: [24L, 'webserver_restapi']}}
['16', 'START_M4', 'Service', 'wentong', 'wentong', '2016-12-05 13:38:13', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['17', 'Start_Vln_Group_Vlnserver', 'Service', 'wentong', 'Start the vln server for Group vlnserver', '2016-12-06 09:57:45', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['18', 'Restart_Supervisorctl_APP', 'Service', 'wentong', 'Restart  supervicsoctl app', '2016-12-06 14:03:30', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Restart The App\n    shell: supervisorctl restart "{{ appname }}"\n...']
['19', 'Start_M4_Server', 'Service', 'wentong', 'Start the m4 server no only any one server', '2016-12-06 14:15:55', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: check have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - restart process\n    - show pid\n  handlers:\n    - name:  restart process\n      shell:  ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n    - name: show pid\n      shell: ./{{server}}/run show chdir={{project}}/{{serviceroot}}\n...']
['20', 'Stop_M4_Server', 'Service', 'wentong.li', 'Stop the M4 Server no only any one server.', '2016-12-06 14:31:03', '---\n- hosts:  "{{hosts}}"\n  tasks:\n  - name: check if have server\n    shell: ls -d {{project}}/{{serviceroot}}/{{server}} | wc -l\n    register: result\n  - name: svc stop service monitor\n    shell:  svc -dk  "{{server}}"  chdir={{project}}/{{serviceroot}}\n    when: result.stdout == "1"\n    notify:\n    - kill service\n  handlers:\n    - name: kill service \n      shell: ./{{server}}/run stop  chdir={{project}}/{{serviceroot}}\n...']
['21', 'Restart_Elastic', 'Service', 'wentong', 'Restart the Elasticsearch service', '2016-12-08 14:55:38', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n\n  - name: Kill Elastic Process\n    shell:  kill -9 `ps aux |grep bootstrap.Elasticsearch | grep -v grep | awk -F \' \' \'{print $2}\'`\n\n  - name: Start Elasticsearch \n    shell:  nohup ./bin/elasticsearch  chdir={{ softpath }}\n  \n  - name: Show Elasticsearch Pid\n    shell: ps aux |grep bootstrap.Elasticsearch | grep -v grep \n...']
['22', 'Test_M4_Init', 'Service', 'wentong', 'Test to init the m4 project', '2016-12-16 09:32:37', '---\n- hosts: "{{hosts}}"\n  tasks:\n  - name: create project directory\n    command: mkdir {{ProjectPath}} -p\n    args:\n      chdir: /tmp\n      creates: "{{ ProjectPath }}"\n\n  - name: apt-get install git\n    apt: name=git state=latest\n  - name: apt-get install daemontools\n    apt: name=daemontools state=latest\n   \n  - name: clone server-tmp\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/server-tmp dest={{ProjectPath}}/server-tmp\n    args:\n      clone: yes\n      force: yes\n  - name: clone gitlib \n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitlibs dest={{ProjectPath}}/gitlibs\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s lib gitlib\n    file: src={{ProjectPath}}/gitlibs dest={{ProjectPath}}/libs state=link force=yes\n \n  - name: clone gitbin\n    git: repo=ssh://git@119.28.49.228:/data/gitrepository/gitbin dest={{ProjectPath}}/gitbin\n    args:\n      clone: yes\n      force: yes\n  - name: ln -s bin gitbin\n    file: src={{ProjectPath}}/gitbin dest={{ProjectPath}}/bin state=link force=yes\n\n  - name: create log directory \n    file: path={{ProjectPath}}/logs state=directory\n  - name: create service root dir \n    file: path={{ProjectPath}}/{{ServiceRoot}} state=directory\n\n  - name: copy initconfig \n    template: src=/data/ansible-playbook/config/initconfig dest={{ProjectPath}}/{{ServiceRoot}}/initconfig\n\n  - name: create config directory\n    file: path={{ProjectPath}}/config/config state=directory\n\n  - name: copy logs.sh script  \n    template: src=/data/ansible-playbook/config/logs.sh  dest={{ProjectPath}}/logs/logs.sh\n\n  - name: template file\n    template: src=/data/ansible-playbook/config/{{ item }} dest={{ProjectPath}}/config/{{ item }}\n    with_items:\n      - LBServer.ini\n      - AlarmServer.ini\n      - cmserver.ini\n      - fwagent.ini\n      - lcclient.ini\n      - lcveriapiconfig.ini\n      - lcvericonfig.ini\n      - dblc.conf\n      - initconfig\n      - LBClientConfig.ini\n      - LBServer.ini\n      - lcconfig.ini\n      - libdbapi.conf\n   ']
['23', 'Test_Start_init_Server', 'Service', 'wentong', 'Start| Restart | Init  service', '2016-12-16 10:26:33', '---\n- hosts: "{{ hosts }}"\n  tasks:\n\n  - name: check if have service root on server\n    shell: ls -ld {{ProjectPath}}/{{ServiceRoot}} | grep {{server}} | wc -l \n    register: ifHaveServerDir\n \n  - name: Copy server dir from server-tmp to server\n    shell: cp -rf server-tmp/{{server}} {{ServiceRoot}}/   \n    when: ifHaveServerDir.stdout == "0"\n    args:\n      chdir: "{{ ProjectPath }}"\n\n  - name: svc start service \n    shell:  svc -uc {{server}}  chdir={{ProjectPath}}/{{ServiceRoot}}\n\n  - name: kill service \n    shell: ./{{server}}/run stop  chdir={{ProjectPath}}/{{ServiceRoot}}\n...']
['24', 'Update_Latest_GitRep', 'Git', 'wentong', 'Go to Git repository and update to latest version.', '2016-12-16 11:02:24', '---\n- hosts: "{{ hosts }}"\n  tasks:\n  - name: Update to latest version\n    shell:  git pull   chdir={{gitRepPat[I 161219 11:33:58 web:1946] 304 GET /playbookmanager/all/ (172.17.92.116) 3.90ms
[I 161219 11:34:24 web:1946] 200 POST /actionmanager/id/ (172.17.92.116) 32.04ms
[I 161219 11:34:24 web:1946] 304 GET /actionmanager/page/1 (172.17.92.116) 5.68ms
[I 161219 11:34:43 web:1946] 302 GET /action (172.17.92.116) 1.07ms
[I 161219 11:34:43 web:1946] 200 GET /login?next=%2Faction (172.17.92.116) 30.93ms
[I 161219 11:34:43 web:1946] 200 GET /static/css/signin.css (172.17.92.116) 67.67ms
[I 161219 11:34:43 web:1946] 200 GET /static/js/ie-emulation-modes-warning.js (172.17.92.116) 26.91ms
[I 161219 11:34:43 web:1946] 200 GET /static/js/ie10-viewport-bug-workaround.js (172.17.92.116) 24.68ms
[I 161219 11:34:43 web:1946] 200 GET /static/css/bootstrap.min.css (172.17.92.116) 156.23ms
[W 161219 11:34:44 web:1946] 404 GET /favicon.ico (172.17.92.116) 44.67ms
[I 161219 11:34:52 web:1946] 302 POST /login (172.17.92.116) 44.37ms
[I 161219 11:34:52 web:1946] 200 GET / (172.17.92.116) 19.82ms
[I 161219 11:34:52 web:1946] 200 GET /static/css/sb-admin.css (172.17.92.116) 15.54ms
[I 161219 11:34:52 web:1946] 200 GET /static/font-awesome/css/font-awesome.min.css (172.17.92.116) 37.29ms
[I 161219 11:34:52 web:1946] 200 GET /static/css/plugins/morris.css (172.17.92.116) 28.18ms
[I 161219 11:34:52 web:1946] 200 GET /static/js/jquery.js (172.17.92.116) 14.54ms
[I 161219 11:34:52 web:1946] 200 GET /static/js/bootstrap.min.js (172.17.92.116) 21.21ms
[I 161219 11:34:52 web:1946] 200 GET /static/js/plugins/morris/raphael.min.js (172.17.92.116) 26.08ms
[I 161219 11:34:52 web:1946] 200 GET /static/js/plugins/morris/morris.min.js (172.17.92.116) 24.91ms
[I 161219 11:34:52 web:1946] 200 GET /static/font-awesome/fonts/fontawesome-webfont.woff?v=4.2.0 (172.17.92.116) 28.59ms
[I 161219 11:34:52 web:1946] 200 GET /static/js/plugins/morris/morris-data.js (172.17.92.116) 16.68ms
[I 161219 11:34:53 web:1946] 200 GET /static/fonts/glyphicons-halflings-regular.woff2 (172.17.92.116) 25.12ms
[I 161219 11:34:53 web:1946] 200 GET /static/js/deltaops.js (172.17.92.116) 1.62ms
[I 161219 11:34:53 web:1946] 200 GET /static/js/ws.js (172.17.92.116) 1.95ms
[I 161219 11:34:53 web:1946] 200 GET /static/js/formvalid.js (172.17.92.116) 1.83ms
[I 161219 11:34:53 web:1946] 200 GET /static/js/main.js (172.17.92.116) 2.72ms
[I 161219 11:34:53 web:1946] 200 GET /static/js/term.js (172.17.92.116) 228.45ms
[I 161219 11:34:53 web:1946] 200 GET /host/get/1 (172.17.92.116) 6.40ms
[I 161219 11:34:55 web:1946] 200 GET /host/get/2 (172.17.92.116) 6.59ms
[I 161219 11:34:58 web:1946] 200 GET /actionmanager/owner/host/42 (172.17.92.116) 4.91ms
[I 161226 16:01:05 web:1946] 302 GET / (172.17.92.114) 1.20ms
[I 161226 16:01:05 web:1946] 200 GET /login?next=%2F (172.17.92.114) 29.67ms
[I 161226 16:01:05 web:1946] 200 GET /static/js/ie-emulation-modes-warning.js (172.17.92.114) 56.11ms
[I 161226 16:01:05 web:1946] 200 GET /static/css/signin.css (172.17.92.114) 16.31ms
[I 161226 16:01:05 web:1946] 200 GET /static/css/bootstrap.min.css (172.17.92.114) 102.42ms
[I 161226 16:01:05 web:1946] 200 GET /static/js/ie10-viewport-bug-workaround.js (172.17.92.114) 26.41ms
[W 161226 16:01:06 web:1946] 404 GET /favicon.ico (172.17.92.114) 94.53ms
[I 170104 11:40:49 web:1946] 302 GET / (172.17.92.114) 0.94ms
[I 170104 11:40:49 web:1946] 200 GET /login?next=%2F (172.17.92.114) 35.48ms
[I 170104 11:40:49 web:1946] 200 GET /static/css/bootstrap.min.css (172.17.92.114) 27.13ms
[I 170104 11:40:49 web:1946] 200 GET /static/js/ie-emulation-modes-warning.js (172.17.92.114) 20.83ms
[I 170104 11:40:49 web:1946] 200 GET /static/js/ie10-viewport-bug-workaround.js (172.17.92.114) 25.55ms
[I 170104 11:40:49 web:1946] 200 GET /static/css/signin.css (172.17.92.114) 7.94ms
[W 170104 11:40:50 web:1946] 404 GET /favicon.ico (172.17.92.114) 105.74ms
[I 170104 11:50:27 web:1946] 302 GET /logout (172.17.92.200) 2.01ms
[I 170104 11:50:27 web:1946] 200 GET /login (172.17.92.200) 3.16ms
[I 170104 11:50:27 web:1946] 200 GET /static/css/signin.css (172.17.92.200) 1.85ms
[I 170104 11:50:27 web:1946] 200 GET /static/js/ie-emulation-modes-warning.js (172.17.92.200) 2.04ms
[I 170104 11:50:27 web:1946] 200 GET /static/js/ie10-viewport-bug-workaround.js (172.17.92.200) 1.81ms
[I 170104 11:50:27 web:1946] 200 GET /static/css/bootstrap.min.css (172.17.92.200) 322.21ms
[W 170104 11:50:28 web:1946] 404 GET /favicon.ico (172.17.92.200) 4.07ms
[I 170104 11:50:34 web:1946] 302 GET / (172.17.92.200) 1.16ms
[I 170104 11:50:34 web:1946] 200 GET /login?next=%2F (172.17.92.200) 3.41ms
[I 170104 12:02:14 web:1946] 200 GET /login (172.17.92.200) 28.79ms
[I 170104 12:02:14 web:1946] 304 GET /static/css/bootstrap.min.css (172.17.92.200) 2.10ms
[I 170104 12:02:14 web:1946] 304 GET /static/css/signin.css (172.17.92.200) 1.58ms
[I 170104 12:02:14 web:1946] 304 GET /static/js/ie-emulation-modes-warning.js (172.17.92.200) 1.57ms
[I 170104 12:02:14 web:1946] 304 GET /static/js/ie10-viewport-bug-workaround.js (172.17.92.200) 1.33ms
[I 170104 12:02:16 web:1946] 200 GET /login (172.17.92.200) 3.04ms
[I 170104 12:02:17 web:1946] 304 GET /static/css/bootstrap.min.css (172.17.92.200) 3.20ms
[I 170104 12:02:17 web:1946] 304 GET /static/css/signin.css (172.17.92.200) 1.49ms
[I 170104 12:02:17 web:1946] 304 GET /static/js/ie-emulation-modes-warning.js (172.17.92.200) 1.81ms
[I 170104 12:02:17 web:1946] 304 GET /static/js/ie10-viewport-bug-workaround.js (172.17.92.200) 1.94ms
[I 170104 12:02:28 web:1946] 302 POST /login (172.17.92.200) 511.07ms
[I 170104 12:02:28 web:1946] 200 GET / (172.17.92.200) 88.88ms
[I 170104 12:02:28 web:1946] 200 GET /static/css/sb-admin.css (172.17.92.200) 18.93ms
[I 170104 12:02:28 web:1946] 200 GET /static/css/plugins/morris.css (172.17.92.200) 16.03ms
[I 170104 12:02:28 web:1946] 200 GET /static/font-awesome/css/font-awesome.min.css (172.17.92.200) 18.28ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/jquery.js (172.17.92.200) 119.90ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/bootstrap.min.js (172.17.92.200) 27.35ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/plugins/morris/raphael.min.js (172.17.92.200) 24.73ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/plugins/morris/morris.min.js (172.17.92.200) 24.39ms
[I 170104 12:02:29 web:1946] 200 GET /static/font-awesome/fonts/fontawesome-webfont.woff?v=4.2.0 (172.17.92.200) 11.18ms
[I 170104 12:02:29 web:1946] 200 GET /static/fonts/glyphicons-halflings-regular.woff2 (172.17.92.200) 24.38ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/plugins/morris/morris-data.js (172.17.92.200) 9.57ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/deltaops.js (172.17.92.200) 2.38ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/ws.js (172.17.92.200) 17.09ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/formvalid.js (172.17.92.200) 23.29ms
[I 170104 12:02:29 web:1946] 200 GET /static/js/main.js (172.17.92.200) 21.65ms
[I 170104 12:02:30 web:1946] 200 GET /static/js/term.js (172.17.92.200) 586.59ms
[I 170104 12:02:30 web:1946] 200 GET /host/get/1 (172.17.92.200) 6.35ms
